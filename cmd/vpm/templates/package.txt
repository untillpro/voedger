{{define "package"}}

{{if .HeaderFileContent}}
{{.HeaderFileContent}}
{{end}}

package orm
{{range .Imports}}
{{.}}
{{end}}

var Package_{{.Name}} = struct {
// package variables
{{range .Items}}
    {{.Type}}_{{.Name}} {{.Type}}_{{$.Name}}_{{.Name}}
{{end}}
}{
{{range .Items}}
    {{.Type}}_{{.Name}}: {{.Type}}_{{$.Name}}_{{.Name}}{
        Type: Type{qname: "{{.TypeQName}}"},
    },
{{end}}
}

{{range .Items}}
// package items
type {{.Type}}_{{$.Name}}_{{.Name}} struct {
    Type
}


type Value_{{.Type}}_{{.Package.Name}}_{{.Name}} struct{
    tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

{{range .Fields}}
func (v *Value_{{.Table.Type}}_{{.Table.Package.Name}}_{{.Table.Name}}) {{.GetMethodName}}() {{.Type}} {
    return v.tv.As{{capitalize .Type}}("{{.Name}}")
}
{{end}}

func (v *{{.Type}}_{{.Package.Name}}_{{.Name}}) MustGetValue(id ID) Value_{{.Type}}_{{.Package.Name}}_{{.Name}} {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.qname)
	kb.PutInt64(FieldNameSysID, int64(id))
	tv := exttinygo.MustGetValue(kb)
	return Value_{{.Type}}_{{.Package.Name}}_{{.Name}}{tv: tv, kb: kb}
}
{{end}}

{{end}}
