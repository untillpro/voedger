{{define "methods"}}

{{if or (eq .Type "WDoc") (eq .Type "View")}}
func (v {{.Type}}_{{.Package.Name}}_{{.Name}}) QueryValue(id ID) (Value_{{.Type}}_{{.Package.Name}}_{{.Name}}, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.qname)
	kb.PutInt64(FieldNameSysID, int64(id))
	tv, exists := exttinygo.QueryValue(kb)
	return Value_{{.Type}}_{{.Package.Name}}_{{.Name}}{tv: tv, kb: kb}, exists
}
{{end}}

{{if or (eq .Type "WDoc") (eq .Type "View") (eq .Type "CDoc")}}
func (v {{.Type}}_{{.Package.Name}}_{{.Name}}) MustGet(id ID) Value_{{.Type}}_{{.Package.Name}}_{{.Name}} {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.qname)
	kb.PutInt64(FieldNameSysID, int64(id))
	tv := exttinygo.MustGetValue(kb)
	return Value_{{.Type}}_{{.Package.Name}}_{{.Name}}{tv: tv{{if or (eq .Type "WDoc") (eq .Type "View")}}, kb: kb{{end}}}
}
{{end}}

{{if or (eq .Type "Container")}}
func (v {{.Type}}_{{.Package.Name}}_{{.Name}}) Get(id ID) (Value_{{.Type}}_{{.Package.Name}}_{{.Name}}, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.qname)
	kb.PutInt64(FieldNameSysID, int64(id))
	tv, exists := exttinygo.QueryValue(kb)
	return Value_{{.Type}}_{{.Package.Name}}_{{.Name}}{tv: tv{{if or (eq .Type "WDoc") (eq .Type "View")}}, kb: kb{{end}}}, exists
}
{{end}}

{{if or (eq .Type "WDoc") (eq .Type "View")}}
func (v {{.Type}}_{{.Package.Name}}_{{.Name}}) NewIntent(id ID) Intent_{{.Type}}_{{.Package.Name}}_{{.Name}} {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.qname)
	kb.PutInt64(FieldNameSysID, int64(id))
	return Intent_{{.Type}}_{{.Package.Name}}_{{.Name}}{intent: exttinygo.NewValue(kb)}
}
{{end}}

{{end}}
