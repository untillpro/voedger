// Code generated by vpm. DO NOT EDIT.

package orm

import (
	"iter"

	"github.com/voedger/voedger/pkg/exttinygo"
)

// package type
type TPackage_sys struct {
	Path                                    string
	WS_AppWorkspaceWS                       WS_sys_AppWorkspaceWS
	CSingleton_AppWorkspace                 CSingleton_sys_AppWorkspace
	WS_DeviceProfileWS                      WS_sys_DeviceProfileWS
	CSingleton_DeviceProfile                CSingleton_sys_DeviceProfile
	Type_RefreshPrincipalTokenResult        Type_sys_RefreshPrincipalTokenResult
	Query_RefreshPrincipalToken             Query_sys_RefreshPrincipalToken
	WS_UserProfileWS                        WS_sys_UserProfileWS
	Type_SendEmailVerificationParams        Type_sys_SendEmailVerificationParams
	Command_SendEmailVerificationCode       Command_sys_SendEmailVerificationCode
	Type_DescribePackageParams              Type_sys_DescribePackageParams
	Type_DescribePackageResult              Type_sys_DescribePackageResult
	Query_DescribePackage                   Query_sys_DescribePackage
	Type_DescribePackageNamesResult         Type_sys_DescribePackageNamesResult
	Query_DescribePackageNames              Query_sys_DescribePackageNames
	Type_InitialEmailVerificationResult     Type_sys_InitialEmailVerificationResult
	Type_InitiateEmailVerificationParams    Type_sys_InitiateEmailVerificationParams
	Query_InitiateEmailVerification         Query_sys_InitiateEmailVerification
	Type_IssueVerifiedValueTokenParams      Type_sys_IssueVerifiedValueTokenParams
	Type_IssueVerifiedValueTokenResult      Type_sys_IssueVerifiedValueTokenResult
	Query_IssueVerifiedValueToken           Query_sys_IssueVerifiedValueToken
	CSingleton_UserProfile                  CSingleton_sys_UserProfile
	ODoc_ODoc                               ODoc_sys_ODoc
	WRecord_WRecord                         WRecord_sys_WRecord
	Type_InitiateCancelAcceptedInviteParams Type_sys_InitiateCancelAcceptedInviteParams
	Command_InitiateCancelAcceptedInvite    Command_sys_InitiateCancelAcceptedInvite
	Command_InitiateDeactivateWorkspace     Command_sys_InitiateDeactivateWorkspace
	Type_InitiateInvitationByEMailParams    Type_sys_InitiateInvitationByEMailParams
	Command_InitiateInvitationByEMail       Command_sys_InitiateInvitationByEMail
	Type_InitiateJoinWorkspaceParams        Type_sys_InitiateJoinWorkspaceParams
	Command_InitiateJoinWorkspace           Command_sys_InitiateJoinWorkspace
	Command_InitiateLeaveWorkspace          Command_sys_InitiateLeaveWorkspace
	CRecord_CRecord                         CRecord_sys_CRecord
	Type_InitiateUpdateInviteRolesParams    Type_sys_InitiateUpdateInviteRolesParams
	Command_InitiateUpdateInviteRoles       Command_sys_InitiateUpdateInviteRoles
	CDoc_Subject                            CDoc_sys_Subject
	WDoc_BLOB                               WDoc_sys_BLOB
	Command_CUD                             Command_sys_CUD
	Type_CancelSentInviteParams             Type_sys_CancelSentInviteParams
	Command_CancelSentInvite                Command_sys_CancelSentInvite
	CDoc_ChildWorkspace                     CDoc_sys_ChildWorkspace
	View_ChildWorkspaceIdx                  View_sys_ChildWorkspaceIdx
	Type_CollectionParams                   Type_sys_CollectionParams
	Query_Collection                        Query_sys_Collection
	View_CollectionView                     View_sys_CollectionView
	Type_CreateJoinedWorkspaceParams        Type_sys_CreateJoinedWorkspaceParams
	Command_CreateJoinedWorkspace           Command_sys_CreateJoinedWorkspace
	Type_CreateWorkspaceParams              Type_sys_CreateWorkspaceParams
	Command_CreateWorkspace                 Command_sys_CreateWorkspace
	Type_CreateWorkspaceIDParams            Type_sys_CreateWorkspaceIDParams
	Command_CreateWorkspaceID               Command_sys_CreateWorkspaceID
	Type_DeactivateJoinedWorkspaceParams    Type_sys_DeactivateJoinedWorkspaceParams
	Command_DeactivateJoinedWorkspace       Command_sys_DeactivateJoinedWorkspace
	Query_DownloadBLOBAuthnz                Query_sys_DownloadBLOBAuthnz
	Command_DownloadBLOBHelper              Command_sys_DownloadBLOBHelper
	Type_EchoParams                         Type_sys_EchoParams
	Type_EchoResult                         Type_sys_EchoResult
	Query_Echo                              Query_sys_Echo
	Type_EnrichPrincipalTokenParams         Type_sys_EnrichPrincipalTokenParams
	Type_EnrichPrincipalTokenResult         Type_sys_EnrichPrincipalTokenResult
	Query_EnrichPrincipalToken              Query_sys_EnrichPrincipalToken
	Type_GRCountResult                      Type_sys_GRCountResult
	Query_GRCount                           Query_sys_GRCount
	Type_GetCDocParams                      Type_sys_GetCDocParams
	Type_GetCDocResult                      Type_sys_GetCDocResult
	Query_GetCDoc                           Query_sys_GetCDoc
	Command_Init                            Command_sys_Init
	Type_InitChildWorkspaceParams           Type_sys_InitChildWorkspaceParams
	Command_InitChildWorkspace              Command_sys_InitChildWorkspace
	CSingleton_WorkspaceDescriptor          CSingleton_sys_WorkspaceDescriptor
	CDoc_Invite                             CDoc_sys_Invite
	View_InviteIndexView                    View_sys_InviteIndexView
	CDoc_WorkspaceID                        CDoc_sys_WorkspaceID
	CDoc_JoinedWorkspace                    CDoc_sys_JoinedWorkspace
	View_JoinedWorkspaceIndexView           View_sys_JoinedWorkspaceIndexView
	Type_JournalParams                      Type_sys_JournalParams
	Type_JournalResult                      Type_sys_JournalResult
	Query_Journal                           Query_sys_Journal
	Type_ModulesResult                      Type_sys_ModulesResult
	Query_Modules                           Query_sys_Modules
	View_NextBaseWSID                       View_sys_NextBaseWSID
	Type_OnChildWorkspaceDeactivatedParams  Type_sys_OnChildWorkspaceDeactivatedParams
	Command_OnChildWorkspaceDeactivated     Command_sys_OnChildWorkspaceDeactivated
	Type_OnJoinedWorkspaceDeactivatedParams Type_sys_OnJoinedWorkspaceDeactivatedParams
	Command_OnJoinedWorkspaceDeactivated    Command_sys_OnJoinedWorkspaceDeactivated
	Type_OnWorkspaceDeactivatedParams       Type_sys_OnWorkspaceDeactivatedParams
	Command_OnWorkspaceDeactivated          Command_sys_OnWorkspaceDeactivated
	Type_QueryChildWorkspaceByNameParams    Type_sys_QueryChildWorkspaceByNameParams
	Type_QueryChildWorkspaceByNameResult    Type_sys_QueryChildWorkspaceByNameResult
	Query_QueryChildWorkspaceByName         Query_sys_QueryChildWorkspaceByName
	Type_Raw                                Type_sys_Raw
	View_RecordsRegistry                    View_sys_RecordsRegistry
	Command_RegisterTempBLOB1d              Command_sys_RegisterTempBLOB1d
	Type_RenameQNameParams                  Type_sys_RenameQNameParams
	Command_RenameQName                     Command_sys_RenameQName
	Type_SqlQueryParams                     Type_sys_SqlQueryParams
	Type_SqlQueryResult                     Type_sys_SqlQueryResult
	Query_SqlQuery                          Query_sys_SqlQuery
	Type_StateParams                        Type_sys_StateParams
	Type_StateResult                        Type_sys_StateResult
	Query_State                             Query_sys_State
	View_Uniques                            View_sys_Uniques
	Type_UpdateJoinedWorkspaceRolesParams   Type_sys_UpdateJoinedWorkspaceRolesParams
	Command_UpdateJoinedWorkspaceRoles      Command_sys_UpdateJoinedWorkspaceRoles
	Command_UploadBLOBHelper                Command_sys_UploadBLOBHelper
	View_ViewSubjectsIdx                    View_sys_ViewSubjectsIdx
	View_WLogDates                          View_sys_WLogDates
	View_WorkspaceIDIdx                     View_sys_WorkspaceIDIdx
	View_projectionOffsets                  View_sys_projectionOffsets
}

// package variables
var Package_sys = TPackage_sys{
	Path: "voedger.com/packages/sys",
	WS_AppWorkspaceWS: WS_sys_AppWorkspaceWS{
		Type: Type{fQName: "voedger.com/packages/sys.AppWorkspaceWS"},
	}, CSingleton_AppWorkspace: CSingleton_sys_AppWorkspace{
		Type: Type{fQName: "voedger.com/packages/sys.AppWorkspace"},
	}, WS_DeviceProfileWS: WS_sys_DeviceProfileWS{
		Type: Type{fQName: "voedger.com/packages/sys.DeviceProfileWS"},
	}, CSingleton_DeviceProfile: CSingleton_sys_DeviceProfile{
		Type: Type{fQName: "voedger.com/packages/sys.DeviceProfile"},
	}, Type_RefreshPrincipalTokenResult: Type_sys_RefreshPrincipalTokenResult{
		Type: Type{fQName: "voedger.com/packages/sys.RefreshPrincipalTokenResult"},
	}, Query_RefreshPrincipalToken: Query_sys_RefreshPrincipalToken{
		Type: Type{fQName: "voedger.com/packages/sys.RefreshPrincipalToken"},
	}, WS_UserProfileWS: WS_sys_UserProfileWS{
		Type: Type{fQName: "voedger.com/packages/sys.UserProfileWS"},
	}, Type_SendEmailVerificationParams: Type_sys_SendEmailVerificationParams{
		Type: Type{fQName: "voedger.com/packages/sys.SendEmailVerificationParams"},
	}, Command_SendEmailVerificationCode: Command_sys_SendEmailVerificationCode{
		Type: Type{fQName: "voedger.com/packages/sys.SendEmailVerificationCode"},
	}, Type_DescribePackageParams: Type_sys_DescribePackageParams{
		Type: Type{fQName: "voedger.com/packages/sys.DescribePackageParams"},
	}, Type_DescribePackageResult: Type_sys_DescribePackageResult{
		Type: Type{fQName: "voedger.com/packages/sys.DescribePackageResult"},
	}, Query_DescribePackage: Query_sys_DescribePackage{
		Type: Type{fQName: "voedger.com/packages/sys.DescribePackage"},
	}, Type_DescribePackageNamesResult: Type_sys_DescribePackageNamesResult{
		Type: Type{fQName: "voedger.com/packages/sys.DescribePackageNamesResult"},
	}, Query_DescribePackageNames: Query_sys_DescribePackageNames{
		Type: Type{fQName: "voedger.com/packages/sys.DescribePackageNames"},
	}, Type_InitialEmailVerificationResult: Type_sys_InitialEmailVerificationResult{
		Type: Type{fQName: "voedger.com/packages/sys.InitialEmailVerificationResult"},
	}, Type_InitiateEmailVerificationParams: Type_sys_InitiateEmailVerificationParams{
		Type: Type{fQName: "voedger.com/packages/sys.InitiateEmailVerificationParams"},
	}, Query_InitiateEmailVerification: Query_sys_InitiateEmailVerification{
		Type: Type{fQName: "voedger.com/packages/sys.InitiateEmailVerification"},
	}, Type_IssueVerifiedValueTokenParams: Type_sys_IssueVerifiedValueTokenParams{
		Type: Type{fQName: "voedger.com/packages/sys.IssueVerifiedValueTokenParams"},
	}, Type_IssueVerifiedValueTokenResult: Type_sys_IssueVerifiedValueTokenResult{
		Type: Type{fQName: "voedger.com/packages/sys.IssueVerifiedValueTokenResult"},
	}, Query_IssueVerifiedValueToken: Query_sys_IssueVerifiedValueToken{
		Type: Type{fQName: "voedger.com/packages/sys.IssueVerifiedValueToken"},
	}, CSingleton_UserProfile: CSingleton_sys_UserProfile{
		Type: Type{fQName: "voedger.com/packages/sys.UserProfile"},
	}, ODoc_ODoc: ODoc_sys_ODoc{
		Type: Type{fQName: "voedger.com/packages/sys.ODoc"},
	}, WRecord_WRecord: WRecord_sys_WRecord{
		Type: Type{fQName: "voedger.com/packages/sys.WRecord"},
	}, Type_InitiateCancelAcceptedInviteParams: Type_sys_InitiateCancelAcceptedInviteParams{
		Type: Type{fQName: "voedger.com/packages/sys.InitiateCancelAcceptedInviteParams"},
	}, Command_InitiateCancelAcceptedInvite: Command_sys_InitiateCancelAcceptedInvite{
		Type: Type{fQName: "voedger.com/packages/sys.InitiateCancelAcceptedInvite"},
	}, Command_InitiateDeactivateWorkspace: Command_sys_InitiateDeactivateWorkspace{
		Type: Type{fQName: "voedger.com/packages/sys.InitiateDeactivateWorkspace"},
	}, Type_InitiateInvitationByEMailParams: Type_sys_InitiateInvitationByEMailParams{
		Type: Type{fQName: "voedger.com/packages/sys.InitiateInvitationByEMailParams"},
	}, Command_InitiateInvitationByEMail: Command_sys_InitiateInvitationByEMail{
		Type: Type{fQName: "voedger.com/packages/sys.InitiateInvitationByEMail"},
	}, Type_InitiateJoinWorkspaceParams: Type_sys_InitiateJoinWorkspaceParams{
		Type: Type{fQName: "voedger.com/packages/sys.InitiateJoinWorkspaceParams"},
	}, Command_InitiateJoinWorkspace: Command_sys_InitiateJoinWorkspace{
		Type: Type{fQName: "voedger.com/packages/sys.InitiateJoinWorkspace"},
	}, Command_InitiateLeaveWorkspace: Command_sys_InitiateLeaveWorkspace{
		Type: Type{fQName: "voedger.com/packages/sys.InitiateLeaveWorkspace"},
	}, CRecord_CRecord: CRecord_sys_CRecord{
		Type: Type{fQName: "voedger.com/packages/sys.CRecord"},
	}, Type_InitiateUpdateInviteRolesParams: Type_sys_InitiateUpdateInviteRolesParams{
		Type: Type{fQName: "voedger.com/packages/sys.InitiateUpdateInviteRolesParams"},
	}, Command_InitiateUpdateInviteRoles: Command_sys_InitiateUpdateInviteRoles{
		Type: Type{fQName: "voedger.com/packages/sys.InitiateUpdateInviteRoles"},
	}, CDoc_Subject: CDoc_sys_Subject{
		Type: Type{fQName: "voedger.com/packages/sys.Subject"},
	}, WDoc_BLOB: WDoc_sys_BLOB{
		Type: Type{fQName: "voedger.com/packages/sys.BLOB"},
	}, Command_CUD: Command_sys_CUD{
		Type: Type{fQName: "voedger.com/packages/sys.CUD"},
	}, Type_CancelSentInviteParams: Type_sys_CancelSentInviteParams{
		Type: Type{fQName: "voedger.com/packages/sys.CancelSentInviteParams"},
	}, Command_CancelSentInvite: Command_sys_CancelSentInvite{
		Type: Type{fQName: "voedger.com/packages/sys.CancelSentInvite"},
	}, CDoc_ChildWorkspace: CDoc_sys_ChildWorkspace{
		Type: Type{fQName: "voedger.com/packages/sys.ChildWorkspace"},
	}, View_ChildWorkspaceIdx: View_sys_ChildWorkspaceIdx{
		Type: Type{fQName: "voedger.com/packages/sys.ChildWorkspaceIdx"},
	}, Type_CollectionParams: Type_sys_CollectionParams{
		Type: Type{fQName: "voedger.com/packages/sys.CollectionParams"},
	}, Query_Collection: Query_sys_Collection{
		Type: Type{fQName: "voedger.com/packages/sys.Collection"},
	}, View_CollectionView: View_sys_CollectionView{
		Type: Type{fQName: "voedger.com/packages/sys.CollectionView"},
	}, Type_CreateJoinedWorkspaceParams: Type_sys_CreateJoinedWorkspaceParams{
		Type: Type{fQName: "voedger.com/packages/sys.CreateJoinedWorkspaceParams"},
	}, Command_CreateJoinedWorkspace: Command_sys_CreateJoinedWorkspace{
		Type: Type{fQName: "voedger.com/packages/sys.CreateJoinedWorkspace"},
	}, Type_CreateWorkspaceParams: Type_sys_CreateWorkspaceParams{
		Type: Type{fQName: "voedger.com/packages/sys.CreateWorkspaceParams"},
	}, Command_CreateWorkspace: Command_sys_CreateWorkspace{
		Type: Type{fQName: "voedger.com/packages/sys.CreateWorkspace"},
	}, Type_CreateWorkspaceIDParams: Type_sys_CreateWorkspaceIDParams{
		Type: Type{fQName: "voedger.com/packages/sys.CreateWorkspaceIDParams"},
	}, Command_CreateWorkspaceID: Command_sys_CreateWorkspaceID{
		Type: Type{fQName: "voedger.com/packages/sys.CreateWorkspaceID"},
	}, Type_DeactivateJoinedWorkspaceParams: Type_sys_DeactivateJoinedWorkspaceParams{
		Type: Type{fQName: "voedger.com/packages/sys.DeactivateJoinedWorkspaceParams"},
	}, Command_DeactivateJoinedWorkspace: Command_sys_DeactivateJoinedWorkspace{
		Type: Type{fQName: "voedger.com/packages/sys.DeactivateJoinedWorkspace"},
	}, Query_DownloadBLOBAuthnz: Query_sys_DownloadBLOBAuthnz{
		Type: Type{fQName: "voedger.com/packages/sys.DownloadBLOBAuthnz"},
	}, Command_DownloadBLOBHelper: Command_sys_DownloadBLOBHelper{
		Type: Type{fQName: "voedger.com/packages/sys.DownloadBLOBHelper"},
	}, Type_EchoParams: Type_sys_EchoParams{
		Type: Type{fQName: "voedger.com/packages/sys.EchoParams"},
	}, Type_EchoResult: Type_sys_EchoResult{
		Type: Type{fQName: "voedger.com/packages/sys.EchoResult"},
	}, Query_Echo: Query_sys_Echo{
		Type: Type{fQName: "voedger.com/packages/sys.Echo"},
	}, Type_EnrichPrincipalTokenParams: Type_sys_EnrichPrincipalTokenParams{
		Type: Type{fQName: "voedger.com/packages/sys.EnrichPrincipalTokenParams"},
	}, Type_EnrichPrincipalTokenResult: Type_sys_EnrichPrincipalTokenResult{
		Type: Type{fQName: "voedger.com/packages/sys.EnrichPrincipalTokenResult"},
	}, Query_EnrichPrincipalToken: Query_sys_EnrichPrincipalToken{
		Type: Type{fQName: "voedger.com/packages/sys.EnrichPrincipalToken"},
	}, Type_GRCountResult: Type_sys_GRCountResult{
		Type: Type{fQName: "voedger.com/packages/sys.GRCountResult"},
	}, Query_GRCount: Query_sys_GRCount{
		Type: Type{fQName: "voedger.com/packages/sys.GRCount"},
	}, Type_GetCDocParams: Type_sys_GetCDocParams{
		Type: Type{fQName: "voedger.com/packages/sys.GetCDocParams"},
	}, Type_GetCDocResult: Type_sys_GetCDocResult{
		Type: Type{fQName: "voedger.com/packages/sys.GetCDocResult"},
	}, Query_GetCDoc: Query_sys_GetCDoc{
		Type: Type{fQName: "voedger.com/packages/sys.GetCDoc"},
	}, Command_Init: Command_sys_Init{
		Type: Type{fQName: "voedger.com/packages/sys.Init"},
	}, Type_InitChildWorkspaceParams: Type_sys_InitChildWorkspaceParams{
		Type: Type{fQName: "voedger.com/packages/sys.InitChildWorkspaceParams"},
	}, Command_InitChildWorkspace: Command_sys_InitChildWorkspace{
		Type: Type{fQName: "voedger.com/packages/sys.InitChildWorkspace"},
	}, CSingleton_WorkspaceDescriptor: CSingleton_sys_WorkspaceDescriptor{
		Type: Type{fQName: "voedger.com/packages/sys.WorkspaceDescriptor"},
	}, CDoc_Invite: CDoc_sys_Invite{
		Type: Type{fQName: "voedger.com/packages/sys.Invite"},
	}, View_InviteIndexView: View_sys_InviteIndexView{
		Type: Type{fQName: "voedger.com/packages/sys.InviteIndexView"},
	}, CDoc_WorkspaceID: CDoc_sys_WorkspaceID{
		Type: Type{fQName: "voedger.com/packages/sys.WorkspaceID"},
	}, CDoc_JoinedWorkspace: CDoc_sys_JoinedWorkspace{
		Type: Type{fQName: "voedger.com/packages/sys.JoinedWorkspace"},
	}, View_JoinedWorkspaceIndexView: View_sys_JoinedWorkspaceIndexView{
		Type: Type{fQName: "voedger.com/packages/sys.JoinedWorkspaceIndexView"},
	}, Type_JournalParams: Type_sys_JournalParams{
		Type: Type{fQName: "voedger.com/packages/sys.JournalParams"},
	}, Type_JournalResult: Type_sys_JournalResult{
		Type: Type{fQName: "voedger.com/packages/sys.JournalResult"},
	}, Query_Journal: Query_sys_Journal{
		Type: Type{fQName: "voedger.com/packages/sys.Journal"},
	}, Type_ModulesResult: Type_sys_ModulesResult{
		Type: Type{fQName: "voedger.com/packages/sys.ModulesResult"},
	}, Query_Modules: Query_sys_Modules{
		Type: Type{fQName: "voedger.com/packages/sys.Modules"},
	}, View_NextBaseWSID: View_sys_NextBaseWSID{
		Type: Type{fQName: "voedger.com/packages/sys.NextBaseWSID"},
	}, Type_OnChildWorkspaceDeactivatedParams: Type_sys_OnChildWorkspaceDeactivatedParams{
		Type: Type{fQName: "voedger.com/packages/sys.OnChildWorkspaceDeactivatedParams"},
	}, Command_OnChildWorkspaceDeactivated: Command_sys_OnChildWorkspaceDeactivated{
		Type: Type{fQName: "voedger.com/packages/sys.OnChildWorkspaceDeactivated"},
	}, Type_OnJoinedWorkspaceDeactivatedParams: Type_sys_OnJoinedWorkspaceDeactivatedParams{
		Type: Type{fQName: "voedger.com/packages/sys.OnJoinedWorkspaceDeactivatedParams"},
	}, Command_OnJoinedWorkspaceDeactivated: Command_sys_OnJoinedWorkspaceDeactivated{
		Type: Type{fQName: "voedger.com/packages/sys.OnJoinedWorkspaceDeactivated"},
	}, Type_OnWorkspaceDeactivatedParams: Type_sys_OnWorkspaceDeactivatedParams{
		Type: Type{fQName: "voedger.com/packages/sys.OnWorkspaceDeactivatedParams"},
	}, Command_OnWorkspaceDeactivated: Command_sys_OnWorkspaceDeactivated{
		Type: Type{fQName: "voedger.com/packages/sys.OnWorkspaceDeactivated"},
	}, Type_QueryChildWorkspaceByNameParams: Type_sys_QueryChildWorkspaceByNameParams{
		Type: Type{fQName: "voedger.com/packages/sys.QueryChildWorkspaceByNameParams"},
	}, Type_QueryChildWorkspaceByNameResult: Type_sys_QueryChildWorkspaceByNameResult{
		Type: Type{fQName: "voedger.com/packages/sys.QueryChildWorkspaceByNameResult"},
	}, Query_QueryChildWorkspaceByName: Query_sys_QueryChildWorkspaceByName{
		Type: Type{fQName: "voedger.com/packages/sys.QueryChildWorkspaceByName"},
	}, Type_Raw: Type_sys_Raw{
		Type: Type{fQName: "voedger.com/packages/sys.Raw"},
	}, View_RecordsRegistry: View_sys_RecordsRegistry{
		Type: Type{fQName: "voedger.com/packages/sys.RecordsRegistry"},
	}, Command_RegisterTempBLOB1d: Command_sys_RegisterTempBLOB1d{
		Type: Type{fQName: "voedger.com/packages/sys.RegisterTempBLOB1d"},
	}, Type_RenameQNameParams: Type_sys_RenameQNameParams{
		Type: Type{fQName: "voedger.com/packages/sys.RenameQNameParams"},
	}, Command_RenameQName: Command_sys_RenameQName{
		Type: Type{fQName: "voedger.com/packages/sys.RenameQName"},
	}, Type_SqlQueryParams: Type_sys_SqlQueryParams{
		Type: Type{fQName: "voedger.com/packages/sys.SqlQueryParams"},
	}, Type_SqlQueryResult: Type_sys_SqlQueryResult{
		Type: Type{fQName: "voedger.com/packages/sys.SqlQueryResult"},
	}, Query_SqlQuery: Query_sys_SqlQuery{
		Type: Type{fQName: "voedger.com/packages/sys.SqlQuery"},
	}, Type_StateParams: Type_sys_StateParams{
		Type: Type{fQName: "voedger.com/packages/sys.StateParams"},
	}, Type_StateResult: Type_sys_StateResult{
		Type: Type{fQName: "voedger.com/packages/sys.StateResult"},
	}, Query_State: Query_sys_State{
		Type: Type{fQName: "voedger.com/packages/sys.State"},
	}, View_Uniques: View_sys_Uniques{
		Type: Type{fQName: "voedger.com/packages/sys.Uniques"},
	}, Type_UpdateJoinedWorkspaceRolesParams: Type_sys_UpdateJoinedWorkspaceRolesParams{
		Type: Type{fQName: "voedger.com/packages/sys.UpdateJoinedWorkspaceRolesParams"},
	}, Command_UpdateJoinedWorkspaceRoles: Command_sys_UpdateJoinedWorkspaceRoles{
		Type: Type{fQName: "voedger.com/packages/sys.UpdateJoinedWorkspaceRoles"},
	}, Command_UploadBLOBHelper: Command_sys_UploadBLOBHelper{
		Type: Type{fQName: "voedger.com/packages/sys.UploadBLOBHelper"},
	}, View_ViewSubjectsIdx: View_sys_ViewSubjectsIdx{
		Type: Type{fQName: "voedger.com/packages/sys.ViewSubjectsIdx"},
	}, View_WLogDates: View_sys_WLogDates{
		Type: Type{fQName: "voedger.com/packages/sys.WLogDates"},
	}, View_WorkspaceIDIdx: View_sys_WorkspaceIDIdx{
		Type: Type{fQName: "voedger.com/packages/sys.WorkspaceIDIdx"},
	}, View_projectionOffsets: View_sys_projectionOffsets{
		Type: Type{fQName: "voedger.com/packages/sys.projectionOffsets"},
	},
}

type WS_sys_AppWorkspaceWS struct {
	Type
}

type Value_WS_sys_AppWorkspaceWS struct {
	tv exttinygo.TValue
}

type Intent_WS_sys_AppWorkspaceWS struct {
	intent exttinygo.TIntent
}

func (r WS_sys_AppWorkspaceWS) PkgPath() string {
	return Package_sys.Path
}

func (r WS_sys_AppWorkspaceWS) Entity() string {
	return "AppWorkspaceWS"
}

func (r WS_sys_AppWorkspaceWS) Descriptor() string {
	return "AppWorkspace"
}

type CSingleton_sys_AppWorkspace struct {
	Type
}

type Value_CSingleton_sys_AppWorkspace struct {
	tv exttinygo.TValue
}

type Intent_CSingleton_sys_AppWorkspace struct {
	intent exttinygo.TIntent
}

func (r CSingleton_sys_AppWorkspace) PkgPath() string {
	return Package_sys.Path
}

func (r CSingleton_sys_AppWorkspace) Entity() string {
	return "AppWorkspace"
}

type WS_sys_DeviceProfileWS struct {
	Type
}

type Value_WS_sys_DeviceProfileWS struct {
	tv exttinygo.TValue
}

type Intent_WS_sys_DeviceProfileWS struct {
	intent exttinygo.TIntent
}

func (r WS_sys_DeviceProfileWS) PkgPath() string {
	return Package_sys.Path
}

func (r WS_sys_DeviceProfileWS) Entity() string {
	return "DeviceProfileWS"
}

func (r WS_sys_DeviceProfileWS) Descriptor() string {
	return "DeviceProfile"
}

type CSingleton_sys_DeviceProfile struct {
	Type
}

type Value_CSingleton_sys_DeviceProfile struct {
	tv exttinygo.TValue
}

type Intent_CSingleton_sys_DeviceProfile struct {
	intent exttinygo.TIntent
}

func (r CSingleton_sys_DeviceProfile) PkgPath() string {
	return Package_sys.Path
}

func (r CSingleton_sys_DeviceProfile) Entity() string {
	return "DeviceProfile"
}

type Type_sys_RefreshPrincipalTokenResult struct {
	Type
}

type Value_Type_sys_RefreshPrincipalTokenResult struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_RefreshPrincipalTokenResult struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_RefreshPrincipalTokenResult) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_RefreshPrincipalTokenResult) Get_NewPrincipalToken() string {
	return v.tv.AsString("NewPrincipalToken")
}

func (r Type_sys_RefreshPrincipalTokenResult) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_RefreshPrincipalTokenResult) Entity() string {
	return "RefreshPrincipalTokenResult"
}

type Query_sys_RefreshPrincipalToken struct {
	Type
}

func (r Query_sys_RefreshPrincipalToken) PkgPath() string {
	return Package_sys.Path
}

func (r Query_sys_RefreshPrincipalToken) Entity() string {
	return "RefreshPrincipalToken"
}

func (r Query_sys_RefreshPrincipalToken) ArgumentPkgPath() string {
	return ""
}

func (r Query_sys_RefreshPrincipalToken) ArgumentEntity() string {
	return ""
}

func (c Query_sys_RefreshPrincipalToken) Result(sys_container string, newprincipaltoken string) {
	__result := exttinygo.NewValue(exttinygo.KeyBuilder(exttinygo.StorageResult, exttinygo.NullEntity))
	__result.PutString("sys_Container", sys_container)
	__result.PutString("NewPrincipalToken", newprincipaltoken)
}

type WS_sys_UserProfileWS struct {
	Type
}

type Value_WS_sys_UserProfileWS struct {
	tv exttinygo.TValue
}

type Intent_WS_sys_UserProfileWS struct {
	intent exttinygo.TIntent
}

func (r WS_sys_UserProfileWS) PkgPath() string {
	return Package_sys.Path
}

func (r WS_sys_UserProfileWS) Entity() string {
	return "UserProfileWS"
}

func (r WS_sys_UserProfileWS) Descriptor() string {
	return "UserProfile"
}

type Type_sys_SendEmailVerificationParams struct {
	Type
}

type Value_Type_sys_SendEmailVerificationParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_SendEmailVerificationParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_SendEmailVerificationParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_SendEmailVerificationParams) Get_VerificationCode() string {
	return v.tv.AsString("VerificationCode")
}

func (v Value_Type_sys_SendEmailVerificationParams) Get_Email() string {
	return v.tv.AsString("Email")
}

func (v Value_Type_sys_SendEmailVerificationParams) Get_Reason() string {
	return v.tv.AsString("Reason")
}

func (v Value_Type_sys_SendEmailVerificationParams) Get_Language() string {
	return v.tv.AsString("Language")
}

func (r Type_sys_SendEmailVerificationParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_SendEmailVerificationParams) Entity() string {
	return "SendEmailVerificationParams"
}

type Command_sys_SendEmailVerificationCode struct {
	Type
}

func (r Command_sys_SendEmailVerificationCode) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_SendEmailVerificationCode) Entity() string {
	return "SendEmailVerificationCode"
}

func (c Command_sys_SendEmailVerificationCode) ArgumentObject() Value_Type_sys_SendEmailVerificationParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_SendEmailVerificationParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Command_sys_SendEmailVerificationCode) ArgumentPkgPath() string {
	return Package_sys.Type_SendEmailVerificationParams.PkgPath()

}

func (r Command_sys_SendEmailVerificationCode) ArgumentEntity() string {
	return Package_sys.Type_SendEmailVerificationParams.Entity()

}

func (r Command_sys_SendEmailVerificationCode) WorkspaceDescriptor() string {
	return Package_sys.WS_UserProfileWS.Descriptor()
}

type Projector_sys_ApplySendEmailVerificationCode struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_ApplySendEmailVerificationCode) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_ApplySendEmailVerificationCode) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_ApplySendEmailVerificationCode) WorkspaceDescriptor() string {
	return Package_sys.WS_UserProfileWS.Descriptor()
}

func (pkg TPackage_sys) Projector_ApplySendEmailVerificationCode() Projector_sys_ApplySendEmailVerificationCode {
	return Projector_sys_ApplySendEmailVerificationCode{}
}

func (r Projector_sys_ApplySendEmailVerificationCode) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_ApplySendEmailVerificationCode) Entity() string {
	return "ApplySendEmailVerificationCode"
}

type Cmd_sys_SendEmailVerificationCode struct {
	qname string
	event exttinygo.TValue
}

func (c Cmd_sys_SendEmailVerificationCode) Arg() (Value_Type_sys_SendEmailVerificationParams, bool) {
	qname := c.event.AsQName("QName")
	if qname.FullPkgName != Package_sys.Command_SendEmailVerificationCode.PkgPath() || qname.Entity != Package_sys.Command_SendEmailVerificationCode.Entity() {
		return Value_Type_sys_SendEmailVerificationParams{}, false
	}

	return Value_Type_sys_SendEmailVerificationParams{tv: c.event.AsValue("ArgumentObject")}, true
}

func (c Cmd_sys_SendEmailVerificationCode) Event() Event {
	return Event{
		WLogOffset: c.event.AsInt64("WLogOffset"),
	}
}

func (p *Projector_sys_ApplySendEmailVerificationCode) Cmd_SendEmailVerificationCode() Cmd_sys_SendEmailVerificationCode {
	return Cmd_sys_SendEmailVerificationCode{
		qname: p.PkgPath() + "." + "SendEmailVerificationCode",
		event: p.event(),
	}
}

type Type_sys_DescribePackageParams struct {
	Type
}

type Value_Type_sys_DescribePackageParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_DescribePackageParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_DescribePackageParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_DescribePackageParams) Get_PackageName() string {
	return v.tv.AsString("PackageName")
}

func (r Type_sys_DescribePackageParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_DescribePackageParams) Entity() string {
	return "DescribePackageParams"
}

type Type_sys_DescribePackageResult struct {
	Type
}

type Value_Type_sys_DescribePackageResult struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_DescribePackageResult struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_DescribePackageResult) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_DescribePackageResult) Get_PackageDesc() string {
	return v.tv.AsString("PackageDesc")
}

func (r Type_sys_DescribePackageResult) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_DescribePackageResult) Entity() string {
	return "DescribePackageResult"
}

type Query_sys_DescribePackage struct {
	Type
}

func (r Query_sys_DescribePackage) PkgPath() string {
	return Package_sys.Path
}

func (r Query_sys_DescribePackage) Entity() string {
	return "DescribePackage"
}

func (c Query_sys_DescribePackage) ArgumentObject() Value_Type_sys_DescribePackageParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_DescribePackageParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Query_sys_DescribePackage) ArgumentPkgPath() string {
	return Package_sys.Type_DescribePackageParams.PkgPath()

}

func (r Query_sys_DescribePackage) ArgumentEntity() string {
	return Package_sys.Type_DescribePackageParams.Entity()

}

func (c Query_sys_DescribePackage) Result(sys_container string, packagedesc string) {
	__result := exttinygo.NewValue(exttinygo.KeyBuilder(exttinygo.StorageResult, exttinygo.NullEntity))
	__result.PutString("sys_Container", sys_container)
	__result.PutString("PackageDesc", packagedesc)
}

type Type_sys_DescribePackageNamesResult struct {
	Type
}

type Value_Type_sys_DescribePackageNamesResult struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_DescribePackageNamesResult struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_DescribePackageNamesResult) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_DescribePackageNamesResult) Get_Names() string {
	return v.tv.AsString("Names")
}

func (r Type_sys_DescribePackageNamesResult) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_DescribePackageNamesResult) Entity() string {
	return "DescribePackageNamesResult"
}

type Query_sys_DescribePackageNames struct {
	Type
}

func (r Query_sys_DescribePackageNames) PkgPath() string {
	return Package_sys.Path
}

func (r Query_sys_DescribePackageNames) Entity() string {
	return "DescribePackageNames"
}

func (r Query_sys_DescribePackageNames) ArgumentPkgPath() string {
	return ""
}

func (r Query_sys_DescribePackageNames) ArgumentEntity() string {
	return ""
}

func (c Query_sys_DescribePackageNames) Result(sys_container string, names string) {
	__result := exttinygo.NewValue(exttinygo.KeyBuilder(exttinygo.StorageResult, exttinygo.NullEntity))
	__result.PutString("sys_Container", sys_container)
	__result.PutString("Names", names)
}

type Type_sys_InitialEmailVerificationResult struct {
	Type
}

type Value_Type_sys_InitialEmailVerificationResult struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_InitialEmailVerificationResult struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_InitialEmailVerificationResult) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_InitialEmailVerificationResult) Get_VerificationToken() string {
	return v.tv.AsString("VerificationToken")
}

func (r Type_sys_InitialEmailVerificationResult) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_InitialEmailVerificationResult) Entity() string {
	return "InitialEmailVerificationResult"
}

type Type_sys_InitiateEmailVerificationParams struct {
	Type
}

type Value_Type_sys_InitiateEmailVerificationParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_InitiateEmailVerificationParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_InitiateEmailVerificationParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_InitiateEmailVerificationParams) Get_Entity() string {
	return v.tv.AsString("Entity")
}

func (v Value_Type_sys_InitiateEmailVerificationParams) Get_Field() string {
	return v.tv.AsString("Field")
}

func (v Value_Type_sys_InitiateEmailVerificationParams) Get_Email() string {
	return v.tv.AsString("Email")
}

func (v Value_Type_sys_InitiateEmailVerificationParams) Get_TargetWSID() int64 {
	return v.tv.AsInt64("TargetWSID")
}

func (v Value_Type_sys_InitiateEmailVerificationParams) Get_ForRegistry() bool {
	return v.tv.AsBool("ForRegistry")
}

func (v Value_Type_sys_InitiateEmailVerificationParams) Get_Language() string {
	return v.tv.AsString("Language")
}

func (r Type_sys_InitiateEmailVerificationParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_InitiateEmailVerificationParams) Entity() string {
	return "InitiateEmailVerificationParams"
}

type Query_sys_InitiateEmailVerification struct {
	Type
}

func (r Query_sys_InitiateEmailVerification) PkgPath() string {
	return Package_sys.Path
}

func (r Query_sys_InitiateEmailVerification) Entity() string {
	return "InitiateEmailVerification"
}

func (c Query_sys_InitiateEmailVerification) ArgumentObject() Value_Type_sys_InitiateEmailVerificationParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_InitiateEmailVerificationParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Query_sys_InitiateEmailVerification) ArgumentPkgPath() string {
	return Package_sys.Type_InitiateEmailVerificationParams.PkgPath()

}

func (r Query_sys_InitiateEmailVerification) ArgumentEntity() string {
	return Package_sys.Type_InitiateEmailVerificationParams.Entity()

}

func (c Query_sys_InitiateEmailVerification) Result(sys_container string, verificationtoken string) {
	__result := exttinygo.NewValue(exttinygo.KeyBuilder(exttinygo.StorageResult, exttinygo.NullEntity))
	__result.PutString("sys_Container", sys_container)
	__result.PutString("VerificationToken", verificationtoken)
}

type Type_sys_IssueVerifiedValueTokenParams struct {
	Type
}

type Value_Type_sys_IssueVerifiedValueTokenParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_IssueVerifiedValueTokenParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_IssueVerifiedValueTokenParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_IssueVerifiedValueTokenParams) Get_VerificationToken() string {
	return v.tv.AsString("VerificationToken")
}

func (v Value_Type_sys_IssueVerifiedValueTokenParams) Get_VerificationCode() string {
	return v.tv.AsString("VerificationCode")
}

func (v Value_Type_sys_IssueVerifiedValueTokenParams) Get_ForRegistry() bool {
	return v.tv.AsBool("ForRegistry")
}

func (r Type_sys_IssueVerifiedValueTokenParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_IssueVerifiedValueTokenParams) Entity() string {
	return "IssueVerifiedValueTokenParams"
}

type Type_sys_IssueVerifiedValueTokenResult struct {
	Type
}

type Value_Type_sys_IssueVerifiedValueTokenResult struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_IssueVerifiedValueTokenResult struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_IssueVerifiedValueTokenResult) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_IssueVerifiedValueTokenResult) Get_VerifiedValueToken() string {
	return v.tv.AsString("VerifiedValueToken")
}

func (r Type_sys_IssueVerifiedValueTokenResult) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_IssueVerifiedValueTokenResult) Entity() string {
	return "IssueVerifiedValueTokenResult"
}

type Query_sys_IssueVerifiedValueToken struct {
	Type
}

func (r Query_sys_IssueVerifiedValueToken) PkgPath() string {
	return Package_sys.Path
}

func (r Query_sys_IssueVerifiedValueToken) Entity() string {
	return "IssueVerifiedValueToken"
}

func (c Query_sys_IssueVerifiedValueToken) ArgumentObject() Value_Type_sys_IssueVerifiedValueTokenParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_IssueVerifiedValueTokenParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Query_sys_IssueVerifiedValueToken) ArgumentPkgPath() string {
	return Package_sys.Type_IssueVerifiedValueTokenParams.PkgPath()

}

func (r Query_sys_IssueVerifiedValueToken) ArgumentEntity() string {
	return Package_sys.Type_IssueVerifiedValueTokenParams.Entity()

}

func (c Query_sys_IssueVerifiedValueToken) Result(sys_container string, verifiedvaluetoken string) {
	__result := exttinygo.NewValue(exttinygo.KeyBuilder(exttinygo.StorageResult, exttinygo.NullEntity))
	__result.PutString("sys_Container", sys_container)
	__result.PutString("VerifiedValueToken", verifiedvaluetoken)
}

type CSingleton_sys_UserProfile struct {
	Type
}

type Value_CSingleton_sys_UserProfile struct {
	tv exttinygo.TValue
}

type Intent_CSingleton_sys_UserProfile struct {
	intent exttinygo.TIntent
}

func (r CSingleton_sys_UserProfile) PkgPath() string {
	return Package_sys.Path
}

func (r CSingleton_sys_UserProfile) Entity() string {
	return "UserProfile"
}

type ODoc_sys_ODoc struct {
	Type
}

type Value_ODoc_sys_ODoc struct {
	tv exttinygo.TValue
}

type Intent_ODoc_sys_ODoc struct {
	intent exttinygo.TIntent
}

func (r ODoc_sys_ODoc) PkgPath() string {
	return Package_sys.Path
}

func (r ODoc_sys_ODoc) Entity() string {
	return "ODoc"
}

func (v ODoc_sys_ODoc) IAmODoc() {
	return
}

func (v ODoc_sys_ODoc) QName() exttinygo.QName {
	return exttinygo.QName{FullPkgName: v.PkgPath(), Entity: v.Entity()}
}

func (v ODoc_sys_ODoc) Insert(id ID) Intent_ODoc_sys_ODoc {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Intent_ODoc_sys_ODoc{intent: exttinygo.NewValue(kb)}
}

type WRecord_sys_WRecord struct {
	Type
}

type Value_WRecord_sys_WRecord struct {
	tv exttinygo.TValue
}

type Intent_WRecord_sys_WRecord struct {
	intent exttinygo.TIntent
}

func (r WRecord_sys_WRecord) PkgPath() string {
	return Package_sys.Path
}

func (r WRecord_sys_WRecord) Entity() string {
	return "WRecord"
}

type Type_sys_InitiateCancelAcceptedInviteParams struct {
	Type
}

type Value_Type_sys_InitiateCancelAcceptedInviteParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_InitiateCancelAcceptedInviteParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_InitiateCancelAcceptedInviteParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_InitiateCancelAcceptedInviteParams) Get_InviteID() ID {
	return ID(v.tv.AsInt64("InviteID"))
}

func (r Type_sys_InitiateCancelAcceptedInviteParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_InitiateCancelAcceptedInviteParams) Entity() string {
	return "InitiateCancelAcceptedInviteParams"
}

type Command_sys_InitiateCancelAcceptedInvite struct {
	Type
}

func (r Command_sys_InitiateCancelAcceptedInvite) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_InitiateCancelAcceptedInvite) Entity() string {
	return "InitiateCancelAcceptedInvite"
}

func (c Command_sys_InitiateCancelAcceptedInvite) ArgumentObject() Value_Type_sys_InitiateCancelAcceptedInviteParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_InitiateCancelAcceptedInviteParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Command_sys_InitiateCancelAcceptedInvite) ArgumentPkgPath() string {
	return Package_sys.Type_InitiateCancelAcceptedInviteParams.PkgPath()

}

func (r Command_sys_InitiateCancelAcceptedInvite) ArgumentEntity() string {
	return Package_sys.Type_InitiateCancelAcceptedInviteParams.Entity()

}

func (r Command_sys_InitiateCancelAcceptedInvite) WorkspaceDescriptor() string {
	return ""
}

type Projector_sys_ApplyCancelAcceptedInvite struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_ApplyCancelAcceptedInvite) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_ApplyCancelAcceptedInvite) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_ApplyCancelAcceptedInvite) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_ApplyCancelAcceptedInvite() Projector_sys_ApplyCancelAcceptedInvite {
	return Projector_sys_ApplyCancelAcceptedInvite{}
}

func (r Projector_sys_ApplyCancelAcceptedInvite) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_ApplyCancelAcceptedInvite) Entity() string {
	return "ApplyCancelAcceptedInvite"
}

type Cmd_sys_InitiateCancelAcceptedInvite struct {
	qname string
	event exttinygo.TValue
}

func (c Cmd_sys_InitiateCancelAcceptedInvite) Arg() (Value_Type_sys_InitiateCancelAcceptedInviteParams, bool) {
	qname := c.event.AsQName("QName")
	if qname.FullPkgName != Package_sys.Command_InitiateCancelAcceptedInvite.PkgPath() || qname.Entity != Package_sys.Command_InitiateCancelAcceptedInvite.Entity() {
		return Value_Type_sys_InitiateCancelAcceptedInviteParams{}, false
	}

	return Value_Type_sys_InitiateCancelAcceptedInviteParams{tv: c.event.AsValue("ArgumentObject")}, true
}

func (c Cmd_sys_InitiateCancelAcceptedInvite) Event() Event {
	return Event{
		WLogOffset: c.event.AsInt64("WLogOffset"),
	}
}

func (p *Projector_sys_ApplyCancelAcceptedInvite) Cmd_InitiateCancelAcceptedInvite() Cmd_sys_InitiateCancelAcceptedInvite {
	return Cmd_sys_InitiateCancelAcceptedInvite{
		qname: p.PkgPath() + "." + "InitiateCancelAcceptedInvite",
		event: p.event(),
	}
}

type Command_sys_InitiateDeactivateWorkspace struct {
	Type
}

func (r Command_sys_InitiateDeactivateWorkspace) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_InitiateDeactivateWorkspace) Entity() string {
	return "InitiateDeactivateWorkspace"
}

func (r Command_sys_InitiateDeactivateWorkspace) ArgumentPkgPath() string {
	return ""
}

func (r Command_sys_InitiateDeactivateWorkspace) ArgumentEntity() string {
	return ""
}

func (r Command_sys_InitiateDeactivateWorkspace) WorkspaceDescriptor() string {
	return ""
}

type Projector_sys_ApplyDeactivateWorkspace struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_ApplyDeactivateWorkspace) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_ApplyDeactivateWorkspace) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_ApplyDeactivateWorkspace) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_ApplyDeactivateWorkspace() Projector_sys_ApplyDeactivateWorkspace {
	return Projector_sys_ApplyDeactivateWorkspace{}
}

func (r Projector_sys_ApplyDeactivateWorkspace) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_ApplyDeactivateWorkspace) Entity() string {
	return "ApplyDeactivateWorkspace"
}

type Cmd_sys_InitiateDeactivateWorkspace struct {
	qname string
	event exttinygo.TValue
}

func (p *Projector_sys_ApplyDeactivateWorkspace) Cmd_InitiateDeactivateWorkspace() Cmd_sys_InitiateDeactivateWorkspace {
	return Cmd_sys_InitiateDeactivateWorkspace{
		qname: p.PkgPath() + "." + "InitiateDeactivateWorkspace",
		event: p.event(),
	}
}

type Type_sys_InitiateInvitationByEMailParams struct {
	Type
}

type Value_Type_sys_InitiateInvitationByEMailParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_InitiateInvitationByEMailParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_InitiateInvitationByEMailParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_InitiateInvitationByEMailParams) Get_Email() string {
	return v.tv.AsString("Email")
}

func (v Value_Type_sys_InitiateInvitationByEMailParams) Get_Roles() string {
	return v.tv.AsString("Roles")
}

func (v Value_Type_sys_InitiateInvitationByEMailParams) Get_ExpireDatetime() int64 {
	return v.tv.AsInt64("ExpireDatetime")
}

func (v Value_Type_sys_InitiateInvitationByEMailParams) Get_EmailTemplate() string {
	return v.tv.AsString("EmailTemplate")
}

func (v Value_Type_sys_InitiateInvitationByEMailParams) Get_EmailSubject() string {
	return v.tv.AsString("EmailSubject")
}

func (r Type_sys_InitiateInvitationByEMailParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_InitiateInvitationByEMailParams) Entity() string {
	return "InitiateInvitationByEMailParams"
}

type Command_sys_InitiateInvitationByEMail struct {
	Type
}

func (r Command_sys_InitiateInvitationByEMail) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_InitiateInvitationByEMail) Entity() string {
	return "InitiateInvitationByEMail"
}

func (c Command_sys_InitiateInvitationByEMail) ArgumentObject() Value_Type_sys_InitiateInvitationByEMailParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_InitiateInvitationByEMailParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Command_sys_InitiateInvitationByEMail) ArgumentPkgPath() string {
	return Package_sys.Type_InitiateInvitationByEMailParams.PkgPath()

}

func (r Command_sys_InitiateInvitationByEMail) ArgumentEntity() string {
	return Package_sys.Type_InitiateInvitationByEMailParams.Entity()

}

func (r Command_sys_InitiateInvitationByEMail) WorkspaceDescriptor() string {
	return ""
}

type Projector_sys_ApplyInvitation struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_ApplyInvitation) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_ApplyInvitation) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_ApplyInvitation) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_ApplyInvitation() Projector_sys_ApplyInvitation {
	return Projector_sys_ApplyInvitation{}
}

func (r Projector_sys_ApplyInvitation) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_ApplyInvitation) Entity() string {
	return "ApplyInvitation"
}

type Cmd_sys_InitiateInvitationByEMail struct {
	qname string
	event exttinygo.TValue
}

func (c Cmd_sys_InitiateInvitationByEMail) Arg() (Value_Type_sys_InitiateInvitationByEMailParams, bool) {
	qname := c.event.AsQName("QName")
	if qname.FullPkgName != Package_sys.Command_InitiateInvitationByEMail.PkgPath() || qname.Entity != Package_sys.Command_InitiateInvitationByEMail.Entity() {
		return Value_Type_sys_InitiateInvitationByEMailParams{}, false
	}

	return Value_Type_sys_InitiateInvitationByEMailParams{tv: c.event.AsValue("ArgumentObject")}, true
}

func (c Cmd_sys_InitiateInvitationByEMail) Event() Event {
	return Event{
		WLogOffset: c.event.AsInt64("WLogOffset"),
	}
}

func (p *Projector_sys_ApplyInvitation) Cmd_InitiateInvitationByEMail() Cmd_sys_InitiateInvitationByEMail {
	return Cmd_sys_InitiateInvitationByEMail{
		qname: p.PkgPath() + "." + "InitiateInvitationByEMail",
		event: p.event(),
	}
}

type Type_sys_InitiateJoinWorkspaceParams struct {
	Type
}

type Value_Type_sys_InitiateJoinWorkspaceParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_InitiateJoinWorkspaceParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_InitiateJoinWorkspaceParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_InitiateJoinWorkspaceParams) Get_InviteID() ID {
	return ID(v.tv.AsInt64("InviteID"))
}

func (v Value_Type_sys_InitiateJoinWorkspaceParams) Get_VerificationCode() string {
	return v.tv.AsString("VerificationCode")
}

func (r Type_sys_InitiateJoinWorkspaceParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_InitiateJoinWorkspaceParams) Entity() string {
	return "InitiateJoinWorkspaceParams"
}

type Command_sys_InitiateJoinWorkspace struct {
	Type
}

func (r Command_sys_InitiateJoinWorkspace) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_InitiateJoinWorkspace) Entity() string {
	return "InitiateJoinWorkspace"
}

func (c Command_sys_InitiateJoinWorkspace) ArgumentObject() Value_Type_sys_InitiateJoinWorkspaceParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_InitiateJoinWorkspaceParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Command_sys_InitiateJoinWorkspace) ArgumentPkgPath() string {
	return Package_sys.Type_InitiateJoinWorkspaceParams.PkgPath()

}

func (r Command_sys_InitiateJoinWorkspace) ArgumentEntity() string {
	return Package_sys.Type_InitiateJoinWorkspaceParams.Entity()

}

func (r Command_sys_InitiateJoinWorkspace) WorkspaceDescriptor() string {
	return ""
}

type Projector_sys_ApplyJoinWorkspace struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_ApplyJoinWorkspace) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_ApplyJoinWorkspace) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_ApplyJoinWorkspace) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_ApplyJoinWorkspace() Projector_sys_ApplyJoinWorkspace {
	return Projector_sys_ApplyJoinWorkspace{}
}

func (r Projector_sys_ApplyJoinWorkspace) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_ApplyJoinWorkspace) Entity() string {
	return "ApplyJoinWorkspace"
}

type Cmd_sys_InitiateJoinWorkspace struct {
	qname string
	event exttinygo.TValue
}

func (c Cmd_sys_InitiateJoinWorkspace) Arg() (Value_Type_sys_InitiateJoinWorkspaceParams, bool) {
	qname := c.event.AsQName("QName")
	if qname.FullPkgName != Package_sys.Command_InitiateJoinWorkspace.PkgPath() || qname.Entity != Package_sys.Command_InitiateJoinWorkspace.Entity() {
		return Value_Type_sys_InitiateJoinWorkspaceParams{}, false
	}

	return Value_Type_sys_InitiateJoinWorkspaceParams{tv: c.event.AsValue("ArgumentObject")}, true
}

func (c Cmd_sys_InitiateJoinWorkspace) Event() Event {
	return Event{
		WLogOffset: c.event.AsInt64("WLogOffset"),
	}
}

func (p *Projector_sys_ApplyJoinWorkspace) Cmd_InitiateJoinWorkspace() Cmd_sys_InitiateJoinWorkspace {
	return Cmd_sys_InitiateJoinWorkspace{
		qname: p.PkgPath() + "." + "InitiateJoinWorkspace",
		event: p.event(),
	}
}

type Command_sys_InitiateLeaveWorkspace struct {
	Type
}

func (r Command_sys_InitiateLeaveWorkspace) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_InitiateLeaveWorkspace) Entity() string {
	return "InitiateLeaveWorkspace"
}

func (r Command_sys_InitiateLeaveWorkspace) ArgumentPkgPath() string {
	return ""
}

func (r Command_sys_InitiateLeaveWorkspace) ArgumentEntity() string {
	return ""
}

func (r Command_sys_InitiateLeaveWorkspace) WorkspaceDescriptor() string {
	return ""
}

type Projector_sys_ApplyLeaveWorkspace struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_ApplyLeaveWorkspace) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_ApplyLeaveWorkspace) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_ApplyLeaveWorkspace) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_ApplyLeaveWorkspace() Projector_sys_ApplyLeaveWorkspace {
	return Projector_sys_ApplyLeaveWorkspace{}
}

func (r Projector_sys_ApplyLeaveWorkspace) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_ApplyLeaveWorkspace) Entity() string {
	return "ApplyLeaveWorkspace"
}

type Cmd_sys_InitiateLeaveWorkspace struct {
	qname string
	event exttinygo.TValue
}

func (p *Projector_sys_ApplyLeaveWorkspace) Cmd_InitiateLeaveWorkspace() Cmd_sys_InitiateLeaveWorkspace {
	return Cmd_sys_InitiateLeaveWorkspace{
		qname: p.PkgPath() + "." + "InitiateLeaveWorkspace",
		event: p.event(),
	}
}

type CRecord_sys_CRecord struct {
	Type
}

type Value_CRecord_sys_CRecord struct {
	tv exttinygo.TValue
}

type Intent_CRecord_sys_CRecord struct {
	intent exttinygo.TIntent
}

func (r CRecord_sys_CRecord) PkgPath() string {
	return Package_sys.Path
}

func (r CRecord_sys_CRecord) Entity() string {
	return "CRecord"
}

type Projector_sys_ApplyUniques struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_ApplyUniques) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_ApplyUniques) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_ApplyUniques) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_ApplyUniques() Projector_sys_ApplyUniques {
	return Projector_sys_ApplyUniques{}
}

func (p Projector_sys_ApplyUniques) CUDs_CRecord() iter.Seq[Value_sys_CRecord] {
	return func(yield func(Value_sys_CRecord) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if IsCRecord(cudQName) {
				if !yield(Value_sys_CRecord{event: p.event(), v: cudValue}) {
					return
				}
			}
		}
	}
}

func (p Projector_sys_ApplyUniques) CUDs_WRecord() iter.Seq[Value_sys_WRecord] {
	return func(yield func(Value_sys_WRecord) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if IsWRecord(cudQName) {
				if !yield(Value_sys_WRecord{event: p.event(), v: cudValue}) {
					return
				}
			}
		}
	}
}

func (p Projector_sys_ApplyUniques) ODoc() (Value_sys_ODoc, bool) {
	arg := p.event().AsValue("ArgumentObject")
	argQName := arg.AsQName("sys.QName")
	if !IsODoc(argQName) {
		return Value_sys_ODoc{}, false
	}

	return Value_sys_ODoc{
		event: p.event(),
		v:     arg,
		qName: exttinygo.QName{FullPkgName: argQName.FullPkgName, Entity: argQName.Entity},
	}, true
}

func (r Projector_sys_ApplyUniques) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_ApplyUniques) Entity() string {
	return "ApplyUniques"
}

func (p *Projector_sys_ApplyUniques) CUDs_sys_CRecord() iter.Seq[Value_CRecord_sys_CRecord] {
	return func(yield func(Value_CRecord_sys_CRecord) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if cudQName.FullPkgName == Package_sys.CRecord_CRecord.PkgPath() && cudQName.Entity == Package_sys.CRecord_CRecord.Entity() {
				if !yield(Value_CRecord_sys_CRecord{tv: cudValue}) {
					return
				}
			}
		}
	}
}

func (p *Projector_sys_ApplyUniques) Arg_sys_ODoc() (Value_ODoc_sys_ODoc, bool) {
	arg := p.event().AsValue("ArgumentObject")
	argQName := arg.AsQName("sys.QName")
	if argQName.FullPkgName != Package_sys.ODoc_ODoc.PkgPath() || argQName.Entity != Package_sys.ODoc_ODoc.Entity() {
		return Value_ODoc_sys_ODoc{}, false
	}

	return Value_ODoc_sys_ODoc{tv: arg}, true
}

func (p *Projector_sys_ApplyUniques) CUDs_sys_WRecord() iter.Seq[Value_WRecord_sys_WRecord] {
	return func(yield func(Value_WRecord_sys_WRecord) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if cudQName.FullPkgName == Package_sys.WRecord_WRecord.PkgPath() && cudQName.Entity == Package_sys.WRecord_WRecord.Entity() {
				if !yield(Value_WRecord_sys_WRecord{tv: cudValue}) {
					return
				}
			}
		}
	}
}

type Type_sys_InitiateUpdateInviteRolesParams struct {
	Type
}

type Value_Type_sys_InitiateUpdateInviteRolesParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_InitiateUpdateInviteRolesParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_InitiateUpdateInviteRolesParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_InitiateUpdateInviteRolesParams) Get_InviteID() ID {
	return ID(v.tv.AsInt64("InviteID"))
}

func (v Value_Type_sys_InitiateUpdateInviteRolesParams) Get_Roles() string {
	return v.tv.AsString("Roles")
}

func (v Value_Type_sys_InitiateUpdateInviteRolesParams) Get_EmailTemplate() string {
	return v.tv.AsString("EmailTemplate")
}

func (v Value_Type_sys_InitiateUpdateInviteRolesParams) Get_EmailSubject() string {
	return v.tv.AsString("EmailSubject")
}

func (r Type_sys_InitiateUpdateInviteRolesParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_InitiateUpdateInviteRolesParams) Entity() string {
	return "InitiateUpdateInviteRolesParams"
}

type Command_sys_InitiateUpdateInviteRoles struct {
	Type
}

func (r Command_sys_InitiateUpdateInviteRoles) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_InitiateUpdateInviteRoles) Entity() string {
	return "InitiateUpdateInviteRoles"
}

func (c Command_sys_InitiateUpdateInviteRoles) ArgumentObject() Value_Type_sys_InitiateUpdateInviteRolesParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_InitiateUpdateInviteRolesParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Command_sys_InitiateUpdateInviteRoles) ArgumentPkgPath() string {
	return Package_sys.Type_InitiateUpdateInviteRolesParams.PkgPath()

}

func (r Command_sys_InitiateUpdateInviteRoles) ArgumentEntity() string {
	return Package_sys.Type_InitiateUpdateInviteRolesParams.Entity()

}

func (r Command_sys_InitiateUpdateInviteRoles) WorkspaceDescriptor() string {
	return ""
}

type Projector_sys_ApplyUpdateInviteRoles struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_ApplyUpdateInviteRoles) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_ApplyUpdateInviteRoles) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_ApplyUpdateInviteRoles) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_ApplyUpdateInviteRoles() Projector_sys_ApplyUpdateInviteRoles {
	return Projector_sys_ApplyUpdateInviteRoles{}
}

func (r Projector_sys_ApplyUpdateInviteRoles) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_ApplyUpdateInviteRoles) Entity() string {
	return "ApplyUpdateInviteRoles"
}

type Cmd_sys_InitiateUpdateInviteRoles struct {
	qname string
	event exttinygo.TValue
}

func (c Cmd_sys_InitiateUpdateInviteRoles) Arg() (Value_Type_sys_InitiateUpdateInviteRolesParams, bool) {
	qname := c.event.AsQName("QName")
	if qname.FullPkgName != Package_sys.Command_InitiateUpdateInviteRoles.PkgPath() || qname.Entity != Package_sys.Command_InitiateUpdateInviteRoles.Entity() {
		return Value_Type_sys_InitiateUpdateInviteRolesParams{}, false
	}

	return Value_Type_sys_InitiateUpdateInviteRolesParams{tv: c.event.AsValue("ArgumentObject")}, true
}

func (c Cmd_sys_InitiateUpdateInviteRoles) Event() Event {
	return Event{
		WLogOffset: c.event.AsInt64("WLogOffset"),
	}
}

func (p *Projector_sys_ApplyUpdateInviteRoles) Cmd_InitiateUpdateInviteRoles() Cmd_sys_InitiateUpdateInviteRoles {
	return Cmd_sys_InitiateUpdateInviteRoles{
		qname: p.PkgPath() + "." + "InitiateUpdateInviteRoles",
		event: p.event(),
	}
}

type CDoc_sys_Subject struct {
	Type
}

type Value_CDoc_sys_Subject struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_CDoc_sys_Subject struct {
	intent exttinygo.TIntent
}

func (v Value_CDoc_sys_Subject) Get_Login() string {
	return v.tv.AsString("Login")
}

func (v Value_CDoc_sys_Subject) Get_SubjectKind() int32 {
	return v.tv.AsInt32("SubjectKind")
}

func (v Value_CDoc_sys_Subject) Get_Roles() string {
	return v.tv.AsString("Roles")
}

func (v Value_CDoc_sys_Subject) Get_ProfileWSID() int64 {
	return v.tv.AsInt64("ProfileWSID")
}

func (i Intent_CDoc_sys_Subject) Set_Login(value string) Intent_CDoc_sys_Subject {
	i.intent.PutString("Login", value)
	return i
}

func (i Intent_CDoc_sys_Subject) Set_SubjectKind(value int32) Intent_CDoc_sys_Subject {
	i.intent.PutInt32("SubjectKind", value)
	return i
}

func (i Intent_CDoc_sys_Subject) Set_Roles(value string) Intent_CDoc_sys_Subject {
	i.intent.PutString("Roles", value)
	return i
}

func (i Intent_CDoc_sys_Subject) Set_ProfileWSID(value int64) Intent_CDoc_sys_Subject {
	i.intent.PutInt64("ProfileWSID", value)
	return i
}

func (r CDoc_sys_Subject) PkgPath() string {
	return Package_sys.Path
}

func (r CDoc_sys_Subject) Entity() string {
	return "Subject"
}

func (v CDoc_sys_Subject) IAmCDoc() {
	return
}

func (v CDoc_sys_Subject) QName() exttinygo.QName {
	return exttinygo.QName{FullPkgName: v.PkgPath(), Entity: v.Entity()}
}

func (v CDoc_sys_Subject) MustGet(id ID) Value_CDoc_sys_Subject {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Value_CDoc_sys_Subject{tv: exttinygo.MustGetValue(kb)}
}

func (v CDoc_sys_Subject) Get(id ID) (Value_CDoc_sys_Subject, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	tv, exists := exttinygo.QueryValue(kb)
	return Value_CDoc_sys_Subject{tv: tv}, exists
}

func (v CDoc_sys_Subject) Insert(id ID) Intent_CDoc_sys_Subject {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Intent_CDoc_sys_Subject{intent: exttinygo.NewValue(kb)}
}

func (v CDoc_sys_Subject) Update(id ID) Intent_CDoc_sys_Subject {
	existingValue := v.MustGet(id)
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Intent_CDoc_sys_Subject{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v Value_CDoc_sys_Subject) Insert() Intent_CDoc_sys_Subject {
	return Intent_CDoc_sys_Subject{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_CDoc_sys_Subject) Update() Intent_CDoc_sys_Subject {
	return Intent_CDoc_sys_Subject{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}

type Projector_sys_ApplyViewSubjectsIdx struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_ApplyViewSubjectsIdx) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_ApplyViewSubjectsIdx) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_ApplyViewSubjectsIdx) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_ApplyViewSubjectsIdx() Projector_sys_ApplyViewSubjectsIdx {
	return Projector_sys_ApplyViewSubjectsIdx{}
}

func (r Projector_sys_ApplyViewSubjectsIdx) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_ApplyViewSubjectsIdx) Entity() string {
	return "ApplyViewSubjectsIdx"
}

func (p *Projector_sys_ApplyViewSubjectsIdx) CUDs_sys_Subject() iter.Seq[Value_CDoc_sys_Subject] {
	return func(yield func(Value_CDoc_sys_Subject) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if cudQName.FullPkgName == Package_sys.CDoc_Subject.PkgPath() && cudQName.Entity == Package_sys.CDoc_Subject.Entity() {
				if !yield(Value_CDoc_sys_Subject{tv: cudValue}) {
					return
				}
			}
		}
	}
}

type WDoc_sys_BLOB struct {
	Type
}

type Value_WDoc_sys_BLOB struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_WDoc_sys_BLOB struct {
	intent exttinygo.TIntent
}

func (v Value_WDoc_sys_BLOB) Get_status() int32 {
	return v.tv.AsInt32("status")
}

func (i Intent_WDoc_sys_BLOB) Set_status(value int32) Intent_WDoc_sys_BLOB {
	i.intent.PutInt32("status", value)
	return i
}

func (r WDoc_sys_BLOB) PkgPath() string {
	return Package_sys.Path
}

func (r WDoc_sys_BLOB) Entity() string {
	return "BLOB"
}

func (v WDoc_sys_BLOB) IAmWDoc() {
	return
}

func (v WDoc_sys_BLOB) QName() exttinygo.QName {
	return exttinygo.QName{FullPkgName: v.PkgPath(), Entity: v.Entity()}
}

func (v WDoc_sys_BLOB) Insert(id ID) Intent_WDoc_sys_BLOB {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Intent_WDoc_sys_BLOB{intent: exttinygo.NewValue(kb)}
}

func (v WDoc_sys_BLOB) Update(id ID) Intent_WDoc_sys_BLOB {
	existingValue := v.MustGet(id)
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Intent_WDoc_sys_BLOB{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v WDoc_sys_BLOB) Get(id ID) (Value_WDoc_sys_BLOB, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	tv, exists := exttinygo.QueryValue(kb)
	return Value_WDoc_sys_BLOB{tv: tv, kb: kb}, exists
}

func (v WDoc_sys_BLOB) MustGet(id ID) Value_WDoc_sys_BLOB {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	tv := exttinygo.MustGetValue(kb)
	return Value_WDoc_sys_BLOB{tv: tv, kb: kb}
}

func (v Value_WDoc_sys_BLOB) Insert() Intent_WDoc_sys_BLOB {
	return Intent_WDoc_sys_BLOB{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_WDoc_sys_BLOB) Update() Intent_WDoc_sys_BLOB {
	return Intent_WDoc_sys_BLOB{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}

type Command_sys_CUD struct {
	Type
}

func (r Command_sys_CUD) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_CUD) Entity() string {
	return "CUD"
}

func (r Command_sys_CUD) ArgumentPkgPath() string {
	return ""
}

func (r Command_sys_CUD) ArgumentEntity() string {
	return ""
}

func (r Command_sys_CUD) WorkspaceDescriptor() string {
	return ""
}

type Type_sys_CancelSentInviteParams struct {
	Type
}

type Value_Type_sys_CancelSentInviteParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_CancelSentInviteParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_CancelSentInviteParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_CancelSentInviteParams) Get_InviteID() ID {
	return ID(v.tv.AsInt64("InviteID"))
}

func (r Type_sys_CancelSentInviteParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_CancelSentInviteParams) Entity() string {
	return "CancelSentInviteParams"
}

type Command_sys_CancelSentInvite struct {
	Type
}

func (r Command_sys_CancelSentInvite) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_CancelSentInvite) Entity() string {
	return "CancelSentInvite"
}

func (c Command_sys_CancelSentInvite) ArgumentObject() Value_Type_sys_CancelSentInviteParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_CancelSentInviteParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Command_sys_CancelSentInvite) ArgumentPkgPath() string {
	return Package_sys.Type_CancelSentInviteParams.PkgPath()

}

func (r Command_sys_CancelSentInvite) ArgumentEntity() string {
	return Package_sys.Type_CancelSentInviteParams.Entity()

}

func (r Command_sys_CancelSentInvite) WorkspaceDescriptor() string {
	return ""
}

type CDoc_sys_ChildWorkspace struct {
	Type
}

type Value_CDoc_sys_ChildWorkspace struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_CDoc_sys_ChildWorkspace struct {
	intent exttinygo.TIntent
}

func (v Value_CDoc_sys_ChildWorkspace) Get_WSName() string {
	return v.tv.AsString("WSName")
}

func (v Value_CDoc_sys_ChildWorkspace) Get_WSKindInitializationData() string {
	return v.tv.AsString("WSKindInitializationData")
}

func (v Value_CDoc_sys_ChildWorkspace) Get_TemplateName() string {
	return v.tv.AsString("TemplateName")
}

func (v Value_CDoc_sys_ChildWorkspace) Get_TemplateParams() string {
	return v.tv.AsString("TemplateParams")
}

func (v Value_CDoc_sys_ChildWorkspace) Get_WSClusterID() int32 {
	return v.tv.AsInt32("WSClusterID")
}

func (v Value_CDoc_sys_ChildWorkspace) Get_WSID() int64 {
	return v.tv.AsInt64("WSID")
}

func (v Value_CDoc_sys_ChildWorkspace) Get_WSError() string {
	return v.tv.AsString("WSError")
}

func (i Intent_CDoc_sys_ChildWorkspace) Set_WSName(value string) Intent_CDoc_sys_ChildWorkspace {
	i.intent.PutString("WSName", value)
	return i
}

func (i Intent_CDoc_sys_ChildWorkspace) Set_WSKindInitializationData(value string) Intent_CDoc_sys_ChildWorkspace {
	i.intent.PutString("WSKindInitializationData", value)
	return i
}

func (i Intent_CDoc_sys_ChildWorkspace) Set_TemplateName(value string) Intent_CDoc_sys_ChildWorkspace {
	i.intent.PutString("TemplateName", value)
	return i
}

func (i Intent_CDoc_sys_ChildWorkspace) Set_TemplateParams(value string) Intent_CDoc_sys_ChildWorkspace {
	i.intent.PutString("TemplateParams", value)
	return i
}

func (i Intent_CDoc_sys_ChildWorkspace) Set_WSClusterID(value int32) Intent_CDoc_sys_ChildWorkspace {
	i.intent.PutInt32("WSClusterID", value)
	return i
}

func (i Intent_CDoc_sys_ChildWorkspace) Set_WSID(value int64) Intent_CDoc_sys_ChildWorkspace {
	i.intent.PutInt64("WSID", value)
	return i
}

func (i Intent_CDoc_sys_ChildWorkspace) Set_WSError(value string) Intent_CDoc_sys_ChildWorkspace {
	i.intent.PutString("WSError", value)
	return i
}

func (r CDoc_sys_ChildWorkspace) PkgPath() string {
	return Package_sys.Path
}

func (r CDoc_sys_ChildWorkspace) Entity() string {
	return "ChildWorkspace"
}

func (v CDoc_sys_ChildWorkspace) IAmCDoc() {
	return
}

func (v CDoc_sys_ChildWorkspace) QName() exttinygo.QName {
	return exttinygo.QName{FullPkgName: v.PkgPath(), Entity: v.Entity()}
}

func (v CDoc_sys_ChildWorkspace) MustGet(id ID) Value_CDoc_sys_ChildWorkspace {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Value_CDoc_sys_ChildWorkspace{tv: exttinygo.MustGetValue(kb)}
}

func (v CDoc_sys_ChildWorkspace) Get(id ID) (Value_CDoc_sys_ChildWorkspace, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	tv, exists := exttinygo.QueryValue(kb)
	return Value_CDoc_sys_ChildWorkspace{tv: tv}, exists
}

func (v CDoc_sys_ChildWorkspace) Insert(id ID) Intent_CDoc_sys_ChildWorkspace {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Intent_CDoc_sys_ChildWorkspace{intent: exttinygo.NewValue(kb)}
}

func (v CDoc_sys_ChildWorkspace) Update(id ID) Intent_CDoc_sys_ChildWorkspace {
	existingValue := v.MustGet(id)
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Intent_CDoc_sys_ChildWorkspace{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v Value_CDoc_sys_ChildWorkspace) Insert() Intent_CDoc_sys_ChildWorkspace {
	return Intent_CDoc_sys_ChildWorkspace{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_CDoc_sys_ChildWorkspace) Update() Intent_CDoc_sys_ChildWorkspace {
	return Intent_CDoc_sys_ChildWorkspace{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}

type View_sys_ChildWorkspaceIdx struct {
	Type
}

type Value_View_sys_ChildWorkspaceIdx struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_View_sys_ChildWorkspaceIdx struct {
	intent exttinygo.TIntent
}

func (v Value_View_sys_ChildWorkspaceIdx) Get_ChildWorkspaceID() int64 {
	return v.tv.AsInt64("ChildWorkspaceID")
}

func (i Intent_View_sys_ChildWorkspaceIdx) Set_ChildWorkspaceID(value int64) Intent_View_sys_ChildWorkspaceIdx {
	i.intent.PutInt64("ChildWorkspaceID", value)
	return i
}

func (r View_sys_ChildWorkspaceIdx) PkgPath() string {
	return Package_sys.Path
}

func (r View_sys_ChildWorkspaceIdx) Entity() string {
	return "ChildWorkspaceIdx"
}

func (v View_sys_ChildWorkspaceIdx) Insert(dummy int32, wsname string) Intent_View_sys_ChildWorkspaceIdx {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("dummy", dummy)
	kb.PutString("WSName", wsname)
	return Intent_View_sys_ChildWorkspaceIdx{intent: exttinygo.NewValue(kb)}
}

func (v View_sys_ChildWorkspaceIdx) Keys() []string {
	return []string{"dummy", "WSName"}
}

func (v View_sys_ChildWorkspaceIdx) Update(dummy int32, wsname string) Intent_View_sys_ChildWorkspaceIdx {
	existingValue := v.MustGet(dummy, wsname)
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("dummy", dummy)
	kb.PutString("WSName", wsname)
	return Intent_View_sys_ChildWorkspaceIdx{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v View_sys_ChildWorkspaceIdx) Get(dummy int32, wsname string) (Value_View_sys_ChildWorkspaceIdx, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("dummy", dummy)
	kb.PutString("WSName", wsname)
	tv, exists := exttinygo.QueryValue(kb)
	if !exists {
		return Value_View_sys_ChildWorkspaceIdx{kb: kb}, false
	}
	return Value_View_sys_ChildWorkspaceIdx{tv: tv, kb: kb}, true
}

func (v View_sys_ChildWorkspaceIdx) MustGet(dummy int32, wsname string) Value_View_sys_ChildWorkspaceIdx {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("dummy", dummy)
	kb.PutString("WSName", wsname)
	tv := exttinygo.MustGetValue(kb)
	return Value_View_sys_ChildWorkspaceIdx{tv: tv, kb: kb}
}

func (v Value_View_sys_ChildWorkspaceIdx) Insert() Intent_View_sys_ChildWorkspaceIdx {
	return Intent_View_sys_ChildWorkspaceIdx{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_View_sys_ChildWorkspaceIdx) Update() Intent_View_sys_ChildWorkspaceIdx {
	return Intent_View_sys_ChildWorkspaceIdx{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}

type Type_sys_CollectionParams struct {
	Type
}

type Value_Type_sys_CollectionParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_CollectionParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_CollectionParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_CollectionParams) Get_Schema() string {
	return v.tv.AsString("Schema")
}

func (v Value_Type_sys_CollectionParams) Get_ID() int64 {
	return v.tv.AsInt64("ID")
}

func (r Type_sys_CollectionParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_CollectionParams) Entity() string {
	return "CollectionParams"
}

type Query_sys_Collection struct {
	Type
}

func (r Query_sys_Collection) PkgPath() string {
	return Package_sys.Path
}

func (r Query_sys_Collection) Entity() string {
	return "Collection"
}

func (c Query_sys_Collection) ArgumentObject() Value_Type_sys_CollectionParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_CollectionParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Query_sys_Collection) ArgumentPkgPath() string {
	return Package_sys.Type_CollectionParams.PkgPath()

}

func (r Query_sys_Collection) ArgumentEntity() string {
	return Package_sys.Type_CollectionParams.Entity()

}

type View_sys_CollectionView struct {
	Type
}

type Value_View_sys_CollectionView struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_View_sys_CollectionView struct {
	intent exttinygo.TIntent
}

func (v Value_View_sys_CollectionView) Get_offs() int64 {
	return v.tv.AsInt64("offs")
}

func (i Intent_View_sys_CollectionView) Set_offs(value int64) Intent_View_sys_CollectionView {
	i.intent.PutInt64("offs", value)
	return i
}

func (r View_sys_CollectionView) PkgPath() string {
	return Package_sys.Path
}

func (r View_sys_CollectionView) Entity() string {
	return "CollectionView"
}

func (v View_sys_CollectionView) Insert(partkey int32, docid ID, elementid ID) Intent_View_sys_CollectionView {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("PartKey", partkey)
	kb.PutInt64("DocID", int64(docid))
	kb.PutInt64("ElementID", int64(elementid))
	return Intent_View_sys_CollectionView{intent: exttinygo.NewValue(kb)}
}

func (v View_sys_CollectionView) Keys() []string {
	return []string{"PartKey", "DocID", "ElementID"}
}

func (v View_sys_CollectionView) Update(partkey int32, docid ID, elementid ID) Intent_View_sys_CollectionView {
	existingValue := v.MustGet(partkey, docid, elementid)
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("PartKey", partkey)
	kb.PutInt64("DocID", int64(docid))
	kb.PutInt64("ElementID", int64(elementid))
	return Intent_View_sys_CollectionView{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v View_sys_CollectionView) Get(partkey int32, docid ID, elementid ID) (Value_View_sys_CollectionView, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("PartKey", partkey)
	kb.PutInt64("DocID", int64(docid))
	kb.PutInt64("ElementID", int64(elementid))
	tv, exists := exttinygo.QueryValue(kb)
	if !exists {
		return Value_View_sys_CollectionView{kb: kb}, false
	}
	return Value_View_sys_CollectionView{tv: tv, kb: kb}, true
}

func (v View_sys_CollectionView) MustGet(partkey int32, docid ID, elementid ID) Value_View_sys_CollectionView {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("PartKey", partkey)
	kb.PutInt64("DocID", int64(docid))
	kb.PutInt64("ElementID", int64(elementid))
	tv := exttinygo.MustGetValue(kb)
	return Value_View_sys_CollectionView{tv: tv, kb: kb}
}

func (v Value_View_sys_CollectionView) Insert() Intent_View_sys_CollectionView {
	return Intent_View_sys_CollectionView{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_View_sys_CollectionView) Update() Intent_View_sys_CollectionView {
	return Intent_View_sys_CollectionView{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}

type Type_sys_CreateJoinedWorkspaceParams struct {
	Type
}

type Value_Type_sys_CreateJoinedWorkspaceParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_CreateJoinedWorkspaceParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_CreateJoinedWorkspaceParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_CreateJoinedWorkspaceParams) Get_Roles() string {
	return v.tv.AsString("Roles")
}

func (v Value_Type_sys_CreateJoinedWorkspaceParams) Get_InvitingWorkspaceWSID() int64 {
	return v.tv.AsInt64("InvitingWorkspaceWSID")
}

func (v Value_Type_sys_CreateJoinedWorkspaceParams) Get_WSName() string {
	return v.tv.AsString("WSName")
}

func (r Type_sys_CreateJoinedWorkspaceParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_CreateJoinedWorkspaceParams) Entity() string {
	return "CreateJoinedWorkspaceParams"
}

type Command_sys_CreateJoinedWorkspace struct {
	Type
}

func (r Command_sys_CreateJoinedWorkspace) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_CreateJoinedWorkspace) Entity() string {
	return "CreateJoinedWorkspace"
}

func (c Command_sys_CreateJoinedWorkspace) ArgumentObject() Value_Type_sys_CreateJoinedWorkspaceParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_CreateJoinedWorkspaceParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Command_sys_CreateJoinedWorkspace) ArgumentPkgPath() string {
	return Package_sys.Type_CreateJoinedWorkspaceParams.PkgPath()

}

func (r Command_sys_CreateJoinedWorkspace) ArgumentEntity() string {
	return Package_sys.Type_CreateJoinedWorkspaceParams.Entity()

}

func (r Command_sys_CreateJoinedWorkspace) WorkspaceDescriptor() string {
	return ""
}

type Type_sys_CreateWorkspaceParams struct {
	Type
}

type Value_Type_sys_CreateWorkspaceParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_CreateWorkspaceParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_CreateWorkspaceParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_CreateWorkspaceParams) Get_OwnerWSID() int64 {
	return v.tv.AsInt64("OwnerWSID")
}

func (v Value_Type_sys_CreateWorkspaceParams) Get_OwnerID() int64 {
	return v.tv.AsInt64("OwnerID")
}

func (v Value_Type_sys_CreateWorkspaceParams) Get_OwnerApp() string {
	return v.tv.AsString("OwnerApp")
}

func (v Value_Type_sys_CreateWorkspaceParams) Get_WSName() string {
	return v.tv.AsString("WSName")
}

func (v Value_Type_sys_CreateWorkspaceParams) Get_WSKindInitializationData() string {
	return v.tv.AsString("WSKindInitializationData")
}

func (v Value_Type_sys_CreateWorkspaceParams) Get_TemplateName() string {
	return v.tv.AsString("TemplateName")
}

func (v Value_Type_sys_CreateWorkspaceParams) Get_TemplateParams() string {
	return v.tv.AsString("TemplateParams")
}

func (v Value_Type_sys_CreateWorkspaceParams) Get_OwnerQName2() string {
	return v.tv.AsString("OwnerQName2")
}

func (r Type_sys_CreateWorkspaceParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_CreateWorkspaceParams) Entity() string {
	return "CreateWorkspaceParams"
}

type Command_sys_CreateWorkspace struct {
	Type
}

func (r Command_sys_CreateWorkspace) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_CreateWorkspace) Entity() string {
	return "CreateWorkspace"
}

func (c Command_sys_CreateWorkspace) ArgumentObject() Value_Type_sys_CreateWorkspaceParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_CreateWorkspaceParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Command_sys_CreateWorkspace) ArgumentPkgPath() string {
	return Package_sys.Type_CreateWorkspaceParams.PkgPath()

}

func (r Command_sys_CreateWorkspace) ArgumentEntity() string {
	return Package_sys.Type_CreateWorkspaceParams.Entity()

}

func (r Command_sys_CreateWorkspace) WorkspaceDescriptor() string {
	return ""
}

type Type_sys_CreateWorkspaceIDParams struct {
	Type
}

type Value_Type_sys_CreateWorkspaceIDParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_CreateWorkspaceIDParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_CreateWorkspaceIDParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_CreateWorkspaceIDParams) Get_OwnerWSID() int64 {
	return v.tv.AsInt64("OwnerWSID")
}

func (v Value_Type_sys_CreateWorkspaceIDParams) Get_OwnerID() int64 {
	return v.tv.AsInt64("OwnerID")
}

func (v Value_Type_sys_CreateWorkspaceIDParams) Get_OwnerApp() string {
	return v.tv.AsString("OwnerApp")
}

func (v Value_Type_sys_CreateWorkspaceIDParams) Get_WSName() string {
	return v.tv.AsString("WSName")
}

func (v Value_Type_sys_CreateWorkspaceIDParams) Get_WSKindInitializationData() string {
	return v.tv.AsString("WSKindInitializationData")
}

func (v Value_Type_sys_CreateWorkspaceIDParams) Get_TemplateName() string {
	return v.tv.AsString("TemplateName")
}

func (v Value_Type_sys_CreateWorkspaceIDParams) Get_TemplateParams() string {
	return v.tv.AsString("TemplateParams")
}

func (v Value_Type_sys_CreateWorkspaceIDParams) Get_OwnerQName2() string {
	return v.tv.AsString("OwnerQName2")
}

func (r Type_sys_CreateWorkspaceIDParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_CreateWorkspaceIDParams) Entity() string {
	return "CreateWorkspaceIDParams"
}

type Command_sys_CreateWorkspaceID struct {
	Type
}

func (r Command_sys_CreateWorkspaceID) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_CreateWorkspaceID) Entity() string {
	return "CreateWorkspaceID"
}

func (c Command_sys_CreateWorkspaceID) ArgumentObject() Value_Type_sys_CreateWorkspaceIDParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_CreateWorkspaceIDParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Command_sys_CreateWorkspaceID) ArgumentPkgPath() string {
	return Package_sys.Type_CreateWorkspaceIDParams.PkgPath()

}

func (r Command_sys_CreateWorkspaceID) ArgumentEntity() string {
	return Package_sys.Type_CreateWorkspaceIDParams.Entity()

}

func (r Command_sys_CreateWorkspaceID) WorkspaceDescriptor() string {
	return ""
}

type Type_sys_DeactivateJoinedWorkspaceParams struct {
	Type
}

type Value_Type_sys_DeactivateJoinedWorkspaceParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_DeactivateJoinedWorkspaceParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_DeactivateJoinedWorkspaceParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_DeactivateJoinedWorkspaceParams) Get_InvitingWorkspaceWSID() int64 {
	return v.tv.AsInt64("InvitingWorkspaceWSID")
}

func (r Type_sys_DeactivateJoinedWorkspaceParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_DeactivateJoinedWorkspaceParams) Entity() string {
	return "DeactivateJoinedWorkspaceParams"
}

type Command_sys_DeactivateJoinedWorkspace struct {
	Type
}

func (r Command_sys_DeactivateJoinedWorkspace) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_DeactivateJoinedWorkspace) Entity() string {
	return "DeactivateJoinedWorkspace"
}

func (c Command_sys_DeactivateJoinedWorkspace) ArgumentObject() Value_Type_sys_DeactivateJoinedWorkspaceParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_DeactivateJoinedWorkspaceParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Command_sys_DeactivateJoinedWorkspace) ArgumentPkgPath() string {
	return Package_sys.Type_DeactivateJoinedWorkspaceParams.PkgPath()

}

func (r Command_sys_DeactivateJoinedWorkspace) ArgumentEntity() string {
	return Package_sys.Type_DeactivateJoinedWorkspaceParams.Entity()

}

func (r Command_sys_DeactivateJoinedWorkspace) WorkspaceDescriptor() string {
	return ""
}

type Query_sys_DownloadBLOBAuthnz struct {
	Type
}

func (r Query_sys_DownloadBLOBAuthnz) PkgPath() string {
	return Package_sys.Path
}

func (r Query_sys_DownloadBLOBAuthnz) Entity() string {
	return "DownloadBLOBAuthnz"
}

func (r Query_sys_DownloadBLOBAuthnz) ArgumentPkgPath() string {
	return ""
}

func (r Query_sys_DownloadBLOBAuthnz) ArgumentEntity() string {
	return ""
}

type Command_sys_DownloadBLOBHelper struct {
	Type
}

func (r Command_sys_DownloadBLOBHelper) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_DownloadBLOBHelper) Entity() string {
	return "DownloadBLOBHelper"
}

func (r Command_sys_DownloadBLOBHelper) ArgumentPkgPath() string {
	return ""
}

func (r Command_sys_DownloadBLOBHelper) ArgumentEntity() string {
	return ""
}

func (r Command_sys_DownloadBLOBHelper) WorkspaceDescriptor() string {
	return ""
}

type Type_sys_EchoParams struct {
	Type
}

type Value_Type_sys_EchoParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_EchoParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_EchoParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_EchoParams) Get_Text() string {
	return v.tv.AsString("Text")
}

func (r Type_sys_EchoParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_EchoParams) Entity() string {
	return "EchoParams"
}

type Type_sys_EchoResult struct {
	Type
}

type Value_Type_sys_EchoResult struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_EchoResult struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_EchoResult) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_EchoResult) Get_Res() string {
	return v.tv.AsString("Res")
}

func (r Type_sys_EchoResult) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_EchoResult) Entity() string {
	return "EchoResult"
}

type Query_sys_Echo struct {
	Type
}

func (r Query_sys_Echo) PkgPath() string {
	return Package_sys.Path
}

func (r Query_sys_Echo) Entity() string {
	return "Echo"
}

func (c Query_sys_Echo) ArgumentObject() Value_Type_sys_EchoParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_EchoParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Query_sys_Echo) ArgumentPkgPath() string {
	return Package_sys.Type_EchoParams.PkgPath()

}

func (r Query_sys_Echo) ArgumentEntity() string {
	return Package_sys.Type_EchoParams.Entity()

}

func (c Query_sys_Echo) Result(sys_container string, res string) {
	__result := exttinygo.NewValue(exttinygo.KeyBuilder(exttinygo.StorageResult, exttinygo.NullEntity))
	__result.PutString("sys_Container", sys_container)
	__result.PutString("Res", res)
}

type Type_sys_EnrichPrincipalTokenParams struct {
	Type
}

type Value_Type_sys_EnrichPrincipalTokenParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_EnrichPrincipalTokenParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_EnrichPrincipalTokenParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_EnrichPrincipalTokenParams) Get_Login() string {
	return v.tv.AsString("Login")
}

func (r Type_sys_EnrichPrincipalTokenParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_EnrichPrincipalTokenParams) Entity() string {
	return "EnrichPrincipalTokenParams"
}

type Type_sys_EnrichPrincipalTokenResult struct {
	Type
}

type Value_Type_sys_EnrichPrincipalTokenResult struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_EnrichPrincipalTokenResult struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_EnrichPrincipalTokenResult) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_EnrichPrincipalTokenResult) Get_EnrichedToken() string {
	return v.tv.AsString("EnrichedToken")
}

func (r Type_sys_EnrichPrincipalTokenResult) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_EnrichPrincipalTokenResult) Entity() string {
	return "EnrichPrincipalTokenResult"
}

type Query_sys_EnrichPrincipalToken struct {
	Type
}

func (r Query_sys_EnrichPrincipalToken) PkgPath() string {
	return Package_sys.Path
}

func (r Query_sys_EnrichPrincipalToken) Entity() string {
	return "EnrichPrincipalToken"
}

func (c Query_sys_EnrichPrincipalToken) ArgumentObject() Value_Type_sys_EnrichPrincipalTokenParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_EnrichPrincipalTokenParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Query_sys_EnrichPrincipalToken) ArgumentPkgPath() string {
	return Package_sys.Type_EnrichPrincipalTokenParams.PkgPath()

}

func (r Query_sys_EnrichPrincipalToken) ArgumentEntity() string {
	return Package_sys.Type_EnrichPrincipalTokenParams.Entity()

}

func (c Query_sys_EnrichPrincipalToken) Result(sys_container string, enrichedtoken string) {
	__result := exttinygo.NewValue(exttinygo.KeyBuilder(exttinygo.StorageResult, exttinygo.NullEntity))
	__result.PutString("sys_Container", sys_container)
	__result.PutString("EnrichedToken", enrichedtoken)
}

type Type_sys_GRCountResult struct {
	Type
}

type Value_Type_sys_GRCountResult struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_GRCountResult struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_GRCountResult) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_GRCountResult) Get_NumGoroutines() int32 {
	return v.tv.AsInt32("NumGoroutines")
}

func (r Type_sys_GRCountResult) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_GRCountResult) Entity() string {
	return "GRCountResult"
}

type Query_sys_GRCount struct {
	Type
}

func (r Query_sys_GRCount) PkgPath() string {
	return Package_sys.Path
}

func (r Query_sys_GRCount) Entity() string {
	return "GRCount"
}

func (r Query_sys_GRCount) ArgumentPkgPath() string {
	return ""
}

func (r Query_sys_GRCount) ArgumentEntity() string {
	return ""
}

func (c Query_sys_GRCount) Result(sys_container string, numgoroutines int32) {
	__result := exttinygo.NewValue(exttinygo.KeyBuilder(exttinygo.StorageResult, exttinygo.NullEntity))
	__result.PutString("sys_Container", sys_container)
	__result.PutInt32("NumGoroutines", numgoroutines)
}

type Type_sys_GetCDocParams struct {
	Type
}

type Value_Type_sys_GetCDocParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_GetCDocParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_GetCDocParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_GetCDocParams) Get_ID() int64 {
	return v.tv.AsInt64("ID")
}

func (r Type_sys_GetCDocParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_GetCDocParams) Entity() string {
	return "GetCDocParams"
}

type Type_sys_GetCDocResult struct {
	Type
}

type Value_Type_sys_GetCDocResult struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_GetCDocResult struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_GetCDocResult) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_GetCDocResult) Get_Result() string {
	return v.tv.AsString("Result")
}

func (r Type_sys_GetCDocResult) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_GetCDocResult) Entity() string {
	return "GetCDocResult"
}

type Query_sys_GetCDoc struct {
	Type
}

func (r Query_sys_GetCDoc) PkgPath() string {
	return Package_sys.Path
}

func (r Query_sys_GetCDoc) Entity() string {
	return "GetCDoc"
}

func (c Query_sys_GetCDoc) ArgumentObject() Value_Type_sys_GetCDocParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_GetCDocParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Query_sys_GetCDoc) ArgumentPkgPath() string {
	return Package_sys.Type_GetCDocParams.PkgPath()

}

func (r Query_sys_GetCDoc) ArgumentEntity() string {
	return Package_sys.Type_GetCDocParams.Entity()

}

func (c Query_sys_GetCDoc) Result(sys_container string, result string) {
	__result := exttinygo.NewValue(exttinygo.KeyBuilder(exttinygo.StorageResult, exttinygo.NullEntity))
	__result.PutString("sys_Container", sys_container)
	__result.PutString("Result", result)
}

type Command_sys_Init struct {
	Type
}

func (r Command_sys_Init) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_Init) Entity() string {
	return "Init"
}

func (r Command_sys_Init) ArgumentPkgPath() string {
	return ""
}

func (r Command_sys_Init) ArgumentEntity() string {
	return ""
}

func (r Command_sys_Init) WorkspaceDescriptor() string {
	return ""
}

type Type_sys_InitChildWorkspaceParams struct {
	Type
}

type Value_Type_sys_InitChildWorkspaceParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_InitChildWorkspaceParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_InitChildWorkspaceParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_InitChildWorkspaceParams) Get_WSName() string {
	return v.tv.AsString("WSName")
}

func (v Value_Type_sys_InitChildWorkspaceParams) Get_WSKindInitializationData() string {
	return v.tv.AsString("WSKindInitializationData")
}

func (v Value_Type_sys_InitChildWorkspaceParams) Get_WSClusterID() int32 {
	return v.tv.AsInt32("WSClusterID")
}

func (v Value_Type_sys_InitChildWorkspaceParams) Get_TemplateName() string {
	return v.tv.AsString("TemplateName")
}

func (v Value_Type_sys_InitChildWorkspaceParams) Get_TemplateParams() string {
	return v.tv.AsString("TemplateParams")
}

func (r Type_sys_InitChildWorkspaceParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_InitChildWorkspaceParams) Entity() string {
	return "InitChildWorkspaceParams"
}

type Command_sys_InitChildWorkspace struct {
	Type
}

func (r Command_sys_InitChildWorkspace) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_InitChildWorkspace) Entity() string {
	return "InitChildWorkspace"
}

func (c Command_sys_InitChildWorkspace) ArgumentObject() Value_Type_sys_InitChildWorkspaceParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_InitChildWorkspaceParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Command_sys_InitChildWorkspace) ArgumentPkgPath() string {
	return Package_sys.Type_InitChildWorkspaceParams.PkgPath()

}

func (r Command_sys_InitChildWorkspace) ArgumentEntity() string {
	return Package_sys.Type_InitChildWorkspaceParams.Entity()

}

func (r Command_sys_InitChildWorkspace) WorkspaceDescriptor() string {
	return ""
}

type CSingleton_sys_WorkspaceDescriptor struct {
	Type
}

type Value_CSingleton_sys_WorkspaceDescriptor struct {
	tv exttinygo.TValue
}

type Intent_CSingleton_sys_WorkspaceDescriptor struct {
	intent exttinygo.TIntent
}

func (r CSingleton_sys_WorkspaceDescriptor) PkgPath() string {
	return Package_sys.Path
}

func (r CSingleton_sys_WorkspaceDescriptor) Entity() string {
	return "WorkspaceDescriptor"
}

type Projector_sys_InitializeWorkspace struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_InitializeWorkspace) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_InitializeWorkspace) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_InitializeWorkspace) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_InitializeWorkspace() Projector_sys_InitializeWorkspace {
	return Projector_sys_InitializeWorkspace{}
}

func (r Projector_sys_InitializeWorkspace) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_InitializeWorkspace) Entity() string {
	return "InitializeWorkspace"
}

func (p *Projector_sys_InitializeWorkspace) CUDs_sys_WorkspaceDescriptor() iter.Seq[Value_CSingleton_sys_WorkspaceDescriptor] {
	return func(yield func(Value_CSingleton_sys_WorkspaceDescriptor) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if cudQName.FullPkgName == Package_sys.CSingleton_WorkspaceDescriptor.PkgPath() && cudQName.Entity == Package_sys.CSingleton_WorkspaceDescriptor.Entity() {
				if !yield(Value_CSingleton_sys_WorkspaceDescriptor{tv: cudValue}) {
					return
				}
			}
		}
	}
}

type CDoc_sys_Invite struct {
	Type
}

type Value_CDoc_sys_Invite struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_CDoc_sys_Invite struct {
	intent exttinygo.TIntent
}

func (v Value_CDoc_sys_Invite) Get_SubjectKind() int32 {
	return v.tv.AsInt32("SubjectKind")
}

func (v Value_CDoc_sys_Invite) Get_Login() string {
	return v.tv.AsString("Login")
}

func (v Value_CDoc_sys_Invite) Get_Email() string {
	return v.tv.AsString("Email")
}

func (v Value_CDoc_sys_Invite) Get_Roles() string {
	return v.tv.AsString("Roles")
}

func (v Value_CDoc_sys_Invite) Get_ExpireDatetime() int64 {
	return v.tv.AsInt64("ExpireDatetime")
}

func (v Value_CDoc_sys_Invite) Get_VerificationCode() string {
	return v.tv.AsString("VerificationCode")
}

func (v Value_CDoc_sys_Invite) Get_State() int32 {
	return v.tv.AsInt32("State")
}

func (v Value_CDoc_sys_Invite) Get_Created() int64 {
	return v.tv.AsInt64("Created")
}

func (v Value_CDoc_sys_Invite) Get_Updated() int64 {
	return v.tv.AsInt64("Updated")
}

func (v Value_CDoc_sys_Invite) Get_SubjectID() ID {
	return ID(v.tv.AsInt64("SubjectID"))
}

func (v Value_CDoc_sys_Invite) Get_InviteeProfileWSID() int64 {
	return v.tv.AsInt64("InviteeProfileWSID")
}

func (v Value_CDoc_sys_Invite) Get_ActualLogin() string {
	return v.tv.AsString("ActualLogin")
}

func (i Intent_CDoc_sys_Invite) Set_SubjectKind(value int32) Intent_CDoc_sys_Invite {
	i.intent.PutInt32("SubjectKind", value)
	return i
}

func (i Intent_CDoc_sys_Invite) Set_Login(value string) Intent_CDoc_sys_Invite {
	i.intent.PutString("Login", value)
	return i
}

func (i Intent_CDoc_sys_Invite) Set_Email(value string) Intent_CDoc_sys_Invite {
	i.intent.PutString("Email", value)
	return i
}

func (i Intent_CDoc_sys_Invite) Set_Roles(value string) Intent_CDoc_sys_Invite {
	i.intent.PutString("Roles", value)
	return i
}

func (i Intent_CDoc_sys_Invite) Set_ExpireDatetime(value int64) Intent_CDoc_sys_Invite {
	i.intent.PutInt64("ExpireDatetime", value)
	return i
}

func (i Intent_CDoc_sys_Invite) Set_VerificationCode(value string) Intent_CDoc_sys_Invite {
	i.intent.PutString("VerificationCode", value)
	return i
}

func (i Intent_CDoc_sys_Invite) Set_State(value int32) Intent_CDoc_sys_Invite {
	i.intent.PutInt32("State", value)
	return i
}

func (i Intent_CDoc_sys_Invite) Set_Created(value int64) Intent_CDoc_sys_Invite {
	i.intent.PutInt64("Created", value)
	return i
}

func (i Intent_CDoc_sys_Invite) Set_Updated(value int64) Intent_CDoc_sys_Invite {
	i.intent.PutInt64("Updated", value)
	return i
}

func (i Intent_CDoc_sys_Invite) Set_SubjectID(value ID) Intent_CDoc_sys_Invite {
	i.intent.PutInt64("SubjectID", int64(value))
	return i
}

func (i Intent_CDoc_sys_Invite) Set_InviteeProfileWSID(value int64) Intent_CDoc_sys_Invite {
	i.intent.PutInt64("InviteeProfileWSID", value)
	return i
}

func (i Intent_CDoc_sys_Invite) Set_ActualLogin(value string) Intent_CDoc_sys_Invite {
	i.intent.PutString("ActualLogin", value)
	return i
}

func (r CDoc_sys_Invite) PkgPath() string {
	return Package_sys.Path
}

func (r CDoc_sys_Invite) Entity() string {
	return "Invite"
}

func (v CDoc_sys_Invite) IAmCDoc() {
	return
}

func (v CDoc_sys_Invite) QName() exttinygo.QName {
	return exttinygo.QName{FullPkgName: v.PkgPath(), Entity: v.Entity()}
}

func (v CDoc_sys_Invite) MustGet(id ID) Value_CDoc_sys_Invite {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Value_CDoc_sys_Invite{tv: exttinygo.MustGetValue(kb)}
}

func (v CDoc_sys_Invite) Get(id ID) (Value_CDoc_sys_Invite, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	tv, exists := exttinygo.QueryValue(kb)
	return Value_CDoc_sys_Invite{tv: tv}, exists
}

func (v CDoc_sys_Invite) Insert(id ID) Intent_CDoc_sys_Invite {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Intent_CDoc_sys_Invite{intent: exttinygo.NewValue(kb)}
}

func (v CDoc_sys_Invite) Update(id ID) Intent_CDoc_sys_Invite {
	existingValue := v.MustGet(id)
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Intent_CDoc_sys_Invite{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v Value_CDoc_sys_Invite) Insert() Intent_CDoc_sys_Invite {
	return Intent_CDoc_sys_Invite{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_CDoc_sys_Invite) Update() Intent_CDoc_sys_Invite {
	return Intent_CDoc_sys_Invite{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}

type View_sys_InviteIndexView struct {
	Type
}

type Value_View_sys_InviteIndexView struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_View_sys_InviteIndexView struct {
	intent exttinygo.TIntent
}

func (v Value_View_sys_InviteIndexView) Get_InviteID() ID {
	return ID(v.tv.AsInt64("InviteID"))
}

func (i Intent_View_sys_InviteIndexView) Set_InviteID(value ID) Intent_View_sys_InviteIndexView {
	i.intent.PutInt64("InviteID", int64(value))
	return i
}

func (r View_sys_InviteIndexView) PkgPath() string {
	return Package_sys.Path
}

func (r View_sys_InviteIndexView) Entity() string {
	return "InviteIndexView"
}

func (v View_sys_InviteIndexView) Insert(dummy int32, login string) Intent_View_sys_InviteIndexView {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("Dummy", dummy)
	kb.PutString("Login", login)
	return Intent_View_sys_InviteIndexView{intent: exttinygo.NewValue(kb)}
}

func (v View_sys_InviteIndexView) Keys() []string {
	return []string{"Dummy", "Login"}
}

func (v View_sys_InviteIndexView) Update(dummy int32, login string) Intent_View_sys_InviteIndexView {
	existingValue := v.MustGet(dummy, login)
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("Dummy", dummy)
	kb.PutString("Login", login)
	return Intent_View_sys_InviteIndexView{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v View_sys_InviteIndexView) Get(dummy int32, login string) (Value_View_sys_InviteIndexView, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("Dummy", dummy)
	kb.PutString("Login", login)
	tv, exists := exttinygo.QueryValue(kb)
	if !exists {
		return Value_View_sys_InviteIndexView{kb: kb}, false
	}
	return Value_View_sys_InviteIndexView{tv: tv, kb: kb}, true
}

func (v View_sys_InviteIndexView) MustGet(dummy int32, login string) Value_View_sys_InviteIndexView {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("Dummy", dummy)
	kb.PutString("Login", login)
	tv := exttinygo.MustGetValue(kb)
	return Value_View_sys_InviteIndexView{tv: tv, kb: kb}
}

func (v Value_View_sys_InviteIndexView) Insert() Intent_View_sys_InviteIndexView {
	return Intent_View_sys_InviteIndexView{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_View_sys_InviteIndexView) Update() Intent_View_sys_InviteIndexView {
	return Intent_View_sys_InviteIndexView{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}

type CDoc_sys_WorkspaceID struct {
	Type
}

type Value_CDoc_sys_WorkspaceID struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_CDoc_sys_WorkspaceID struct {
	intent exttinygo.TIntent
}

func (v Value_CDoc_sys_WorkspaceID) Get_OwnerWSID() int64 {
	return v.tv.AsInt64("OwnerWSID")
}

func (v Value_CDoc_sys_WorkspaceID) Get_OwnerID() int64 {
	return v.tv.AsInt64("OwnerID")
}

func (v Value_CDoc_sys_WorkspaceID) Get_OwnerApp() string {
	return v.tv.AsString("OwnerApp")
}

func (v Value_CDoc_sys_WorkspaceID) Get_WSName() string {
	return v.tv.AsString("WSName")
}

func (v Value_CDoc_sys_WorkspaceID) Get_WSKindInitializationData() string {
	return v.tv.AsString("WSKindInitializationData")
}

func (v Value_CDoc_sys_WorkspaceID) Get_TemplateName() string {
	return v.tv.AsString("TemplateName")
}

func (v Value_CDoc_sys_WorkspaceID) Get_TemplateParams() string {
	return v.tv.AsString("TemplateParams")
}

func (v Value_CDoc_sys_WorkspaceID) Get_WSID() int64 {
	return v.tv.AsInt64("WSID")
}

func (v Value_CDoc_sys_WorkspaceID) Get_OwnerQName2() string {
	return v.tv.AsString("OwnerQName2")
}

func (i Intent_CDoc_sys_WorkspaceID) Set_OwnerWSID(value int64) Intent_CDoc_sys_WorkspaceID {
	i.intent.PutInt64("OwnerWSID", value)
	return i
}

func (i Intent_CDoc_sys_WorkspaceID) Set_OwnerID(value int64) Intent_CDoc_sys_WorkspaceID {
	i.intent.PutInt64("OwnerID", value)
	return i
}

func (i Intent_CDoc_sys_WorkspaceID) Set_OwnerApp(value string) Intent_CDoc_sys_WorkspaceID {
	i.intent.PutString("OwnerApp", value)
	return i
}

func (i Intent_CDoc_sys_WorkspaceID) Set_WSName(value string) Intent_CDoc_sys_WorkspaceID {
	i.intent.PutString("WSName", value)
	return i
}

func (i Intent_CDoc_sys_WorkspaceID) Set_WSKindInitializationData(value string) Intent_CDoc_sys_WorkspaceID {
	i.intent.PutString("WSKindInitializationData", value)
	return i
}

func (i Intent_CDoc_sys_WorkspaceID) Set_TemplateName(value string) Intent_CDoc_sys_WorkspaceID {
	i.intent.PutString("TemplateName", value)
	return i
}

func (i Intent_CDoc_sys_WorkspaceID) Set_TemplateParams(value string) Intent_CDoc_sys_WorkspaceID {
	i.intent.PutString("TemplateParams", value)
	return i
}

func (i Intent_CDoc_sys_WorkspaceID) Set_WSID(value int64) Intent_CDoc_sys_WorkspaceID {
	i.intent.PutInt64("WSID", value)
	return i
}

func (i Intent_CDoc_sys_WorkspaceID) Set_OwnerQName2(value string) Intent_CDoc_sys_WorkspaceID {
	i.intent.PutString("OwnerQName2", value)
	return i
}

func (r CDoc_sys_WorkspaceID) PkgPath() string {
	return Package_sys.Path
}

func (r CDoc_sys_WorkspaceID) Entity() string {
	return "WorkspaceID"
}

func (v CDoc_sys_WorkspaceID) IAmCDoc() {
	return
}

func (v CDoc_sys_WorkspaceID) QName() exttinygo.QName {
	return exttinygo.QName{FullPkgName: v.PkgPath(), Entity: v.Entity()}
}

func (v CDoc_sys_WorkspaceID) MustGet(id ID) Value_CDoc_sys_WorkspaceID {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Value_CDoc_sys_WorkspaceID{tv: exttinygo.MustGetValue(kb)}
}

func (v CDoc_sys_WorkspaceID) Get(id ID) (Value_CDoc_sys_WorkspaceID, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	tv, exists := exttinygo.QueryValue(kb)
	return Value_CDoc_sys_WorkspaceID{tv: tv}, exists
}

func (v CDoc_sys_WorkspaceID) Insert(id ID) Intent_CDoc_sys_WorkspaceID {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Intent_CDoc_sys_WorkspaceID{intent: exttinygo.NewValue(kb)}
}

func (v CDoc_sys_WorkspaceID) Update(id ID) Intent_CDoc_sys_WorkspaceID {
	existingValue := v.MustGet(id)
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Intent_CDoc_sys_WorkspaceID{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v Value_CDoc_sys_WorkspaceID) Insert() Intent_CDoc_sys_WorkspaceID {
	return Intent_CDoc_sys_WorkspaceID{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_CDoc_sys_WorkspaceID) Update() Intent_CDoc_sys_WorkspaceID {
	return Intent_CDoc_sys_WorkspaceID{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}

type Projector_sys_InvokeCreateWorkspace struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_InvokeCreateWorkspace) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_InvokeCreateWorkspace) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_InvokeCreateWorkspace) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_InvokeCreateWorkspace() Projector_sys_InvokeCreateWorkspace {
	return Projector_sys_InvokeCreateWorkspace{}
}

func (r Projector_sys_InvokeCreateWorkspace) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_InvokeCreateWorkspace) Entity() string {
	return "InvokeCreateWorkspace"
}

func (p *Projector_sys_InvokeCreateWorkspace) CUDs_sys_WorkspaceID() iter.Seq[Value_CDoc_sys_WorkspaceID] {
	return func(yield func(Value_CDoc_sys_WorkspaceID) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if cudQName.FullPkgName == Package_sys.CDoc_WorkspaceID.PkgPath() && cudQName.Entity == Package_sys.CDoc_WorkspaceID.Entity() {
				if !yield(Value_CDoc_sys_WorkspaceID{tv: cudValue}) {
					return
				}
			}
		}
	}
}

type Projector_sys_InvokeCreateWorkspaceID struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_InvokeCreateWorkspaceID) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_InvokeCreateWorkspaceID) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_InvokeCreateWorkspaceID) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_InvokeCreateWorkspaceID() Projector_sys_InvokeCreateWorkspaceID {
	return Projector_sys_InvokeCreateWorkspaceID{}
}

func (r Projector_sys_InvokeCreateWorkspaceID) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_InvokeCreateWorkspaceID) Entity() string {
	return "InvokeCreateWorkspaceID"
}

func (p *Projector_sys_InvokeCreateWorkspaceID) CUDs_sys_ChildWorkspace() iter.Seq[Value_CDoc_sys_ChildWorkspace] {
	return func(yield func(Value_CDoc_sys_ChildWorkspace) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if cudQName.FullPkgName == Package_sys.CDoc_ChildWorkspace.PkgPath() && cudQName.Entity == Package_sys.CDoc_ChildWorkspace.Entity() {
				if !yield(Value_CDoc_sys_ChildWorkspace{tv: cudValue}) {
					return
				}
			}
		}
	}
}

type CDoc_sys_JoinedWorkspace struct {
	Type
}

type Value_CDoc_sys_JoinedWorkspace struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_CDoc_sys_JoinedWorkspace struct {
	intent exttinygo.TIntent
}

func (v Value_CDoc_sys_JoinedWorkspace) Get_Roles() string {
	return v.tv.AsString("Roles")
}

func (v Value_CDoc_sys_JoinedWorkspace) Get_InvitingWorkspaceWSID() int64 {
	return v.tv.AsInt64("InvitingWorkspaceWSID")
}

func (v Value_CDoc_sys_JoinedWorkspace) Get_WSName() string {
	return v.tv.AsString("WSName")
}

func (i Intent_CDoc_sys_JoinedWorkspace) Set_Roles(value string) Intent_CDoc_sys_JoinedWorkspace {
	i.intent.PutString("Roles", value)
	return i
}

func (i Intent_CDoc_sys_JoinedWorkspace) Set_InvitingWorkspaceWSID(value int64) Intent_CDoc_sys_JoinedWorkspace {
	i.intent.PutInt64("InvitingWorkspaceWSID", value)
	return i
}

func (i Intent_CDoc_sys_JoinedWorkspace) Set_WSName(value string) Intent_CDoc_sys_JoinedWorkspace {
	i.intent.PutString("WSName", value)
	return i
}

func (r CDoc_sys_JoinedWorkspace) PkgPath() string {
	return Package_sys.Path
}

func (r CDoc_sys_JoinedWorkspace) Entity() string {
	return "JoinedWorkspace"
}

func (v CDoc_sys_JoinedWorkspace) IAmCDoc() {
	return
}

func (v CDoc_sys_JoinedWorkspace) QName() exttinygo.QName {
	return exttinygo.QName{FullPkgName: v.PkgPath(), Entity: v.Entity()}
}

func (v CDoc_sys_JoinedWorkspace) MustGet(id ID) Value_CDoc_sys_JoinedWorkspace {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Value_CDoc_sys_JoinedWorkspace{tv: exttinygo.MustGetValue(kb)}
}

func (v CDoc_sys_JoinedWorkspace) Get(id ID) (Value_CDoc_sys_JoinedWorkspace, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	tv, exists := exttinygo.QueryValue(kb)
	return Value_CDoc_sys_JoinedWorkspace{tv: tv}, exists
}

func (v CDoc_sys_JoinedWorkspace) Insert(id ID) Intent_CDoc_sys_JoinedWorkspace {
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Intent_CDoc_sys_JoinedWorkspace{intent: exttinygo.NewValue(kb)}
}

func (v CDoc_sys_JoinedWorkspace) Update(id ID) Intent_CDoc_sys_JoinedWorkspace {
	existingValue := v.MustGet(id)
	kb := exttinygo.KeyBuilder(exttinygo.StorageRecord, v.fQName)
	kb.PutInt64(FieldName_ID, int64(id))
	return Intent_CDoc_sys_JoinedWorkspace{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v Value_CDoc_sys_JoinedWorkspace) Insert() Intent_CDoc_sys_JoinedWorkspace {
	return Intent_CDoc_sys_JoinedWorkspace{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_CDoc_sys_JoinedWorkspace) Update() Intent_CDoc_sys_JoinedWorkspace {
	return Intent_CDoc_sys_JoinedWorkspace{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}

type View_sys_JoinedWorkspaceIndexView struct {
	Type
}

type Value_View_sys_JoinedWorkspaceIndexView struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_View_sys_JoinedWorkspaceIndexView struct {
	intent exttinygo.TIntent
}

func (v Value_View_sys_JoinedWorkspaceIndexView) Get_JoinedWorkspaceID() ID {
	return ID(v.tv.AsInt64("JoinedWorkspaceID"))
}

func (i Intent_View_sys_JoinedWorkspaceIndexView) Set_JoinedWorkspaceID(value ID) Intent_View_sys_JoinedWorkspaceIndexView {
	i.intent.PutInt64("JoinedWorkspaceID", int64(value))
	return i
}

func (r View_sys_JoinedWorkspaceIndexView) PkgPath() string {
	return Package_sys.Path
}

func (r View_sys_JoinedWorkspaceIndexView) Entity() string {
	return "JoinedWorkspaceIndexView"
}

func (v View_sys_JoinedWorkspaceIndexView) Insert(dummy int32, invitingworkspacewsid int64) Intent_View_sys_JoinedWorkspaceIndexView {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("Dummy", dummy)
	kb.PutInt64("InvitingWorkspaceWSID", invitingworkspacewsid)
	return Intent_View_sys_JoinedWorkspaceIndexView{intent: exttinygo.NewValue(kb)}
}

func (v View_sys_JoinedWorkspaceIndexView) Keys() []string {
	return []string{"Dummy", "InvitingWorkspaceWSID"}
}

func (v View_sys_JoinedWorkspaceIndexView) Update(dummy int32, invitingworkspacewsid int64) Intent_View_sys_JoinedWorkspaceIndexView {
	existingValue := v.MustGet(dummy, invitingworkspacewsid)
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("Dummy", dummy)
	kb.PutInt64("InvitingWorkspaceWSID", invitingworkspacewsid)
	return Intent_View_sys_JoinedWorkspaceIndexView{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v View_sys_JoinedWorkspaceIndexView) Get(dummy int32, invitingworkspacewsid int64) (Value_View_sys_JoinedWorkspaceIndexView, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("Dummy", dummy)
	kb.PutInt64("InvitingWorkspaceWSID", invitingworkspacewsid)
	tv, exists := exttinygo.QueryValue(kb)
	if !exists {
		return Value_View_sys_JoinedWorkspaceIndexView{kb: kb}, false
	}
	return Value_View_sys_JoinedWorkspaceIndexView{tv: tv, kb: kb}, true
}

func (v View_sys_JoinedWorkspaceIndexView) MustGet(dummy int32, invitingworkspacewsid int64) Value_View_sys_JoinedWorkspaceIndexView {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("Dummy", dummy)
	kb.PutInt64("InvitingWorkspaceWSID", invitingworkspacewsid)
	tv := exttinygo.MustGetValue(kb)
	return Value_View_sys_JoinedWorkspaceIndexView{tv: tv, kb: kb}
}

func (v Value_View_sys_JoinedWorkspaceIndexView) Insert() Intent_View_sys_JoinedWorkspaceIndexView {
	return Intent_View_sys_JoinedWorkspaceIndexView{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_View_sys_JoinedWorkspaceIndexView) Update() Intent_View_sys_JoinedWorkspaceIndexView {
	return Intent_View_sys_JoinedWorkspaceIndexView{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}

type Type_sys_JournalParams struct {
	Type
}

type Value_Type_sys_JournalParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_JournalParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_JournalParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_JournalParams) Get_From() int64 {
	return v.tv.AsInt64("From")
}

func (v Value_Type_sys_JournalParams) Get_Till() int64 {
	return v.tv.AsInt64("Till")
}

func (v Value_Type_sys_JournalParams) Get_EventTypes() string {
	return v.tv.AsString("EventTypes")
}

func (v Value_Type_sys_JournalParams) Get_IndexForTimestamps() string {
	return v.tv.AsString("IndexForTimestamps")
}

func (v Value_Type_sys_JournalParams) Get_RangeUnit() string {
	return v.tv.AsString("RangeUnit")
}

func (r Type_sys_JournalParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_JournalParams) Entity() string {
	return "JournalParams"
}

type Type_sys_JournalResult struct {
	Type
}

type Value_Type_sys_JournalResult struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_JournalResult struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_JournalResult) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_JournalResult) Get_Offset() int64 {
	return v.tv.AsInt64("Offset")
}

func (v Value_Type_sys_JournalResult) Get_EventTime() int64 {
	return v.tv.AsInt64("EventTime")
}

func (v Value_Type_sys_JournalResult) Get_Event() string {
	return v.tv.AsString("Event")
}

func (r Type_sys_JournalResult) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_JournalResult) Entity() string {
	return "JournalResult"
}

type Query_sys_Journal struct {
	Type
}

func (r Query_sys_Journal) PkgPath() string {
	return Package_sys.Path
}

func (r Query_sys_Journal) Entity() string {
	return "Journal"
}

func (c Query_sys_Journal) ArgumentObject() Value_Type_sys_JournalParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_JournalParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Query_sys_Journal) ArgumentPkgPath() string {
	return Package_sys.Type_JournalParams.PkgPath()

}

func (r Query_sys_Journal) ArgumentEntity() string {
	return Package_sys.Type_JournalParams.Entity()

}

func (c Query_sys_Journal) Result(sys_container string, offset int64, eventtime int64, event string) {
	__result := exttinygo.NewValue(exttinygo.KeyBuilder(exttinygo.StorageResult, exttinygo.NullEntity))
	__result.PutString("sys_Container", sys_container)
	__result.PutInt64("Offset", offset)
	__result.PutInt64("EventTime", eventtime)
	__result.PutString("Event", event)
}

type Type_sys_ModulesResult struct {
	Type
}

type Value_Type_sys_ModulesResult struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_ModulesResult struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_ModulesResult) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_ModulesResult) Get_Modules() string {
	return v.tv.AsString("Modules")
}

func (r Type_sys_ModulesResult) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_ModulesResult) Entity() string {
	return "ModulesResult"
}

type Query_sys_Modules struct {
	Type
}

func (r Query_sys_Modules) PkgPath() string {
	return Package_sys.Path
}

func (r Query_sys_Modules) Entity() string {
	return "Modules"
}

func (r Query_sys_Modules) ArgumentPkgPath() string {
	return ""
}

func (r Query_sys_Modules) ArgumentEntity() string {
	return ""
}

func (c Query_sys_Modules) Result(sys_container string, modules string) {
	__result := exttinygo.NewValue(exttinygo.KeyBuilder(exttinygo.StorageResult, exttinygo.NullEntity))
	__result.PutString("sys_Container", sys_container)
	__result.PutString("Modules", modules)
}

type View_sys_NextBaseWSID struct {
	Type
}

type Value_View_sys_NextBaseWSID struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_View_sys_NextBaseWSID struct {
	intent exttinygo.TIntent
}

func (v Value_View_sys_NextBaseWSID) Get_NextBaseWSID() int64 {
	return v.tv.AsInt64("NextBaseWSID")
}

func (i Intent_View_sys_NextBaseWSID) Set_NextBaseWSID(value int64) Intent_View_sys_NextBaseWSID {
	i.intent.PutInt64("NextBaseWSID", value)
	return i
}

func (r View_sys_NextBaseWSID) PkgPath() string {
	return Package_sys.Path
}

func (r View_sys_NextBaseWSID) Entity() string {
	return "NextBaseWSID"
}

func (v View_sys_NextBaseWSID) Insert(dummy1 int32, dummy2 int32) Intent_View_sys_NextBaseWSID {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("dummy1", dummy1)
	kb.PutInt32("dummy2", dummy2)
	return Intent_View_sys_NextBaseWSID{intent: exttinygo.NewValue(kb)}
}

func (v View_sys_NextBaseWSID) Keys() []string {
	return []string{"dummy1", "dummy2"}
}

func (v View_sys_NextBaseWSID) Update(dummy1 int32, dummy2 int32) Intent_View_sys_NextBaseWSID {
	existingValue := v.MustGet(dummy1, dummy2)
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("dummy1", dummy1)
	kb.PutInt32("dummy2", dummy2)
	return Intent_View_sys_NextBaseWSID{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v View_sys_NextBaseWSID) Get(dummy1 int32, dummy2 int32) (Value_View_sys_NextBaseWSID, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("dummy1", dummy1)
	kb.PutInt32("dummy2", dummy2)
	tv, exists := exttinygo.QueryValue(kb)
	if !exists {
		return Value_View_sys_NextBaseWSID{kb: kb}, false
	}
	return Value_View_sys_NextBaseWSID{tv: tv, kb: kb}, true
}

func (v View_sys_NextBaseWSID) MustGet(dummy1 int32, dummy2 int32) Value_View_sys_NextBaseWSID {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("dummy1", dummy1)
	kb.PutInt32("dummy2", dummy2)
	tv := exttinygo.MustGetValue(kb)
	return Value_View_sys_NextBaseWSID{tv: tv, kb: kb}
}

func (v Value_View_sys_NextBaseWSID) Insert() Intent_View_sys_NextBaseWSID {
	return Intent_View_sys_NextBaseWSID{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_View_sys_NextBaseWSID) Update() Intent_View_sys_NextBaseWSID {
	return Intent_View_sys_NextBaseWSID{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}

type Type_sys_OnChildWorkspaceDeactivatedParams struct {
	Type
}

type Value_Type_sys_OnChildWorkspaceDeactivatedParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_OnChildWorkspaceDeactivatedParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_OnChildWorkspaceDeactivatedParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_OnChildWorkspaceDeactivatedParams) Get_OwnerID() int64 {
	return v.tv.AsInt64("OwnerID")
}

func (r Type_sys_OnChildWorkspaceDeactivatedParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_OnChildWorkspaceDeactivatedParams) Entity() string {
	return "OnChildWorkspaceDeactivatedParams"
}

type Command_sys_OnChildWorkspaceDeactivated struct {
	Type
}

func (r Command_sys_OnChildWorkspaceDeactivated) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_OnChildWorkspaceDeactivated) Entity() string {
	return "OnChildWorkspaceDeactivated"
}

func (c Command_sys_OnChildWorkspaceDeactivated) ArgumentObject() Value_Type_sys_OnChildWorkspaceDeactivatedParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_OnChildWorkspaceDeactivatedParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Command_sys_OnChildWorkspaceDeactivated) ArgumentPkgPath() string {
	return Package_sys.Type_OnChildWorkspaceDeactivatedParams.PkgPath()

}

func (r Command_sys_OnChildWorkspaceDeactivated) ArgumentEntity() string {
	return Package_sys.Type_OnChildWorkspaceDeactivatedParams.Entity()

}

func (r Command_sys_OnChildWorkspaceDeactivated) WorkspaceDescriptor() string {
	return ""
}

type Type_sys_OnJoinedWorkspaceDeactivatedParams struct {
	Type
}

type Value_Type_sys_OnJoinedWorkspaceDeactivatedParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_OnJoinedWorkspaceDeactivatedParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_OnJoinedWorkspaceDeactivatedParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_OnJoinedWorkspaceDeactivatedParams) Get_InvitedToWSID() int64 {
	return v.tv.AsInt64("InvitedToWSID")
}

func (r Type_sys_OnJoinedWorkspaceDeactivatedParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_OnJoinedWorkspaceDeactivatedParams) Entity() string {
	return "OnJoinedWorkspaceDeactivatedParams"
}

type Command_sys_OnJoinedWorkspaceDeactivated struct {
	Type
}

func (r Command_sys_OnJoinedWorkspaceDeactivated) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_OnJoinedWorkspaceDeactivated) Entity() string {
	return "OnJoinedWorkspaceDeactivated"
}

func (c Command_sys_OnJoinedWorkspaceDeactivated) ArgumentObject() Value_Type_sys_OnJoinedWorkspaceDeactivatedParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_OnJoinedWorkspaceDeactivatedParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Command_sys_OnJoinedWorkspaceDeactivated) ArgumentPkgPath() string {
	return Package_sys.Type_OnJoinedWorkspaceDeactivatedParams.PkgPath()

}

func (r Command_sys_OnJoinedWorkspaceDeactivated) ArgumentEntity() string {
	return Package_sys.Type_OnJoinedWorkspaceDeactivatedParams.Entity()

}

func (r Command_sys_OnJoinedWorkspaceDeactivated) WorkspaceDescriptor() string {
	return ""
}

type Type_sys_OnWorkspaceDeactivatedParams struct {
	Type
}

type Value_Type_sys_OnWorkspaceDeactivatedParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_OnWorkspaceDeactivatedParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_OnWorkspaceDeactivatedParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_OnWorkspaceDeactivatedParams) Get_OwnerWSID() int64 {
	return v.tv.AsInt64("OwnerWSID")
}

func (v Value_Type_sys_OnWorkspaceDeactivatedParams) Get_WSName() string {
	return v.tv.AsString("WSName")
}

func (r Type_sys_OnWorkspaceDeactivatedParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_OnWorkspaceDeactivatedParams) Entity() string {
	return "OnWorkspaceDeactivatedParams"
}

type Command_sys_OnWorkspaceDeactivated struct {
	Type
}

func (r Command_sys_OnWorkspaceDeactivated) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_OnWorkspaceDeactivated) Entity() string {
	return "OnWorkspaceDeactivated"
}

func (c Command_sys_OnWorkspaceDeactivated) ArgumentObject() Value_Type_sys_OnWorkspaceDeactivatedParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_OnWorkspaceDeactivatedParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Command_sys_OnWorkspaceDeactivated) ArgumentPkgPath() string {
	return Package_sys.Type_OnWorkspaceDeactivatedParams.PkgPath()

}

func (r Command_sys_OnWorkspaceDeactivated) ArgumentEntity() string {
	return Package_sys.Type_OnWorkspaceDeactivatedParams.Entity()

}

func (r Command_sys_OnWorkspaceDeactivated) WorkspaceDescriptor() string {
	return ""
}

type Projector_sys_ProjectorChildWorkspaceIdx struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_ProjectorChildWorkspaceIdx) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_ProjectorChildWorkspaceIdx) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_ProjectorChildWorkspaceIdx) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_ProjectorChildWorkspaceIdx() Projector_sys_ProjectorChildWorkspaceIdx {
	return Projector_sys_ProjectorChildWorkspaceIdx{}
}

func (r Projector_sys_ProjectorChildWorkspaceIdx) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_ProjectorChildWorkspaceIdx) Entity() string {
	return "ProjectorChildWorkspaceIdx"
}

func (p *Projector_sys_ProjectorChildWorkspaceIdx) CUDs_sys_ChildWorkspace() iter.Seq[Value_CDoc_sys_ChildWorkspace] {
	return func(yield func(Value_CDoc_sys_ChildWorkspace) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if cudQName.FullPkgName == Package_sys.CDoc_ChildWorkspace.PkgPath() && cudQName.Entity == Package_sys.CDoc_ChildWorkspace.Entity() {
				if !yield(Value_CDoc_sys_ChildWorkspace{tv: cudValue}) {
					return
				}
			}
		}
	}
}

type Projector_sys_ProjectorCollection struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_ProjectorCollection) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_ProjectorCollection) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_ProjectorCollection) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_ProjectorCollection() Projector_sys_ProjectorCollection {
	return Projector_sys_ProjectorCollection{}
}

func (p Projector_sys_ProjectorCollection) CUDs_CRecord() iter.Seq[Value_sys_CRecord] {
	return func(yield func(Value_sys_CRecord) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if IsCRecord(cudQName) {
				if !yield(Value_sys_CRecord{event: p.event(), v: cudValue}) {
					return
				}
			}
		}
	}
}

func (r Projector_sys_ProjectorCollection) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_ProjectorCollection) Entity() string {
	return "ProjectorCollection"
}

func (p *Projector_sys_ProjectorCollection) CUDs_sys_CRecord() iter.Seq[Value_CRecord_sys_CRecord] {
	return func(yield func(Value_CRecord_sys_CRecord) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if cudQName.FullPkgName == Package_sys.CRecord_CRecord.PkgPath() && cudQName.Entity == Package_sys.CRecord_CRecord.Entity() {
				if !yield(Value_CRecord_sys_CRecord{tv: cudValue}) {
					return
				}
			}
		}
	}
}

type Projector_sys_ProjectorInviteIndex struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_ProjectorInviteIndex) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_ProjectorInviteIndex) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_ProjectorInviteIndex) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_ProjectorInviteIndex() Projector_sys_ProjectorInviteIndex {
	return Projector_sys_ProjectorInviteIndex{}
}

func (r Projector_sys_ProjectorInviteIndex) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_ProjectorInviteIndex) Entity() string {
	return "ProjectorInviteIndex"
}

func (p *Projector_sys_ProjectorInviteIndex) Cmd_InitiateInvitationByEMail() Cmd_sys_InitiateInvitationByEMail {
	return Cmd_sys_InitiateInvitationByEMail{
		qname: p.PkgPath() + "." + "InitiateInvitationByEMail",
		event: p.event(),
	}
}

type Projector_sys_ProjectorJoinedWorkspaceIndex struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_ProjectorJoinedWorkspaceIndex) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_ProjectorJoinedWorkspaceIndex) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_ProjectorJoinedWorkspaceIndex) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_ProjectorJoinedWorkspaceIndex() Projector_sys_ProjectorJoinedWorkspaceIndex {
	return Projector_sys_ProjectorJoinedWorkspaceIndex{}
}

func (r Projector_sys_ProjectorJoinedWorkspaceIndex) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_ProjectorJoinedWorkspaceIndex) Entity() string {
	return "ProjectorJoinedWorkspaceIndex"
}

type Cmd_sys_CreateJoinedWorkspace struct {
	qname string
	event exttinygo.TValue
}

func (c Cmd_sys_CreateJoinedWorkspace) Arg() (Value_Type_sys_CreateJoinedWorkspaceParams, bool) {
	qname := c.event.AsQName("QName")
	if qname.FullPkgName != Package_sys.Command_CreateJoinedWorkspace.PkgPath() || qname.Entity != Package_sys.Command_CreateJoinedWorkspace.Entity() {
		return Value_Type_sys_CreateJoinedWorkspaceParams{}, false
	}

	return Value_Type_sys_CreateJoinedWorkspaceParams{tv: c.event.AsValue("ArgumentObject")}, true
}

func (c Cmd_sys_CreateJoinedWorkspace) Event() Event {
	return Event{
		WLogOffset: c.event.AsInt64("WLogOffset"),
	}
}

func (p *Projector_sys_ProjectorJoinedWorkspaceIndex) Cmd_CreateJoinedWorkspace() Cmd_sys_CreateJoinedWorkspace {
	return Cmd_sys_CreateJoinedWorkspace{
		qname: p.PkgPath() + "." + "CreateJoinedWorkspace",
		event: p.event(),
	}
}

type Projector_sys_ProjectorWLogDates struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_ProjectorWLogDates) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_ProjectorWLogDates) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_ProjectorWLogDates) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_ProjectorWLogDates() Projector_sys_ProjectorWLogDates {
	return Projector_sys_ProjectorWLogDates{}
}

func (p Projector_sys_ProjectorWLogDates) CUDs_CRecord() iter.Seq[Value_sys_CRecord] {
	return func(yield func(Value_sys_CRecord) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if IsCRecord(cudQName) {
				if !yield(Value_sys_CRecord{event: p.event(), v: cudValue}) {
					return
				}
			}
		}
	}
}

func (p Projector_sys_ProjectorWLogDates) CUDs_WRecord() iter.Seq[Value_sys_WRecord] {
	return func(yield func(Value_sys_WRecord) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if IsWRecord(cudQName) {
				if !yield(Value_sys_WRecord{event: p.event(), v: cudValue}) {
					return
				}
			}
		}
	}
}

func (p Projector_sys_ProjectorWLogDates) ODoc() (Value_sys_ODoc, bool) {
	arg := p.event().AsValue("ArgumentObject")
	argQName := arg.AsQName("sys.QName")
	if !IsODoc(argQName) {
		return Value_sys_ODoc{}, false
	}

	return Value_sys_ODoc{
		event: p.event(),
		v:     arg,
		qName: exttinygo.QName{FullPkgName: argQName.FullPkgName, Entity: argQName.Entity},
	}, true
}

func (r Projector_sys_ProjectorWLogDates) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_ProjectorWLogDates) Entity() string {
	return "ProjectorWLogDates"
}

func (p *Projector_sys_ProjectorWLogDates) CUDs_sys_CRecord() iter.Seq[Value_CRecord_sys_CRecord] {
	return func(yield func(Value_CRecord_sys_CRecord) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if cudQName.FullPkgName == Package_sys.CRecord_CRecord.PkgPath() && cudQName.Entity == Package_sys.CRecord_CRecord.Entity() {
				if !yield(Value_CRecord_sys_CRecord{tv: cudValue}) {
					return
				}
			}
		}
	}
}

func (p *Projector_sys_ProjectorWLogDates) Arg_sys_ODoc() (Value_ODoc_sys_ODoc, bool) {
	arg := p.event().AsValue("ArgumentObject")
	argQName := arg.AsQName("sys.QName")
	if argQName.FullPkgName != Package_sys.ODoc_ODoc.PkgPath() || argQName.Entity != Package_sys.ODoc_ODoc.Entity() {
		return Value_ODoc_sys_ODoc{}, false
	}

	return Value_ODoc_sys_ODoc{tv: arg}, true
}

func (p *Projector_sys_ProjectorWLogDates) CUDs_sys_WRecord() iter.Seq[Value_WRecord_sys_WRecord] {
	return func(yield func(Value_WRecord_sys_WRecord) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if cudQName.FullPkgName == Package_sys.WRecord_WRecord.PkgPath() && cudQName.Entity == Package_sys.WRecord_WRecord.Entity() {
				if !yield(Value_WRecord_sys_WRecord{tv: cudValue}) {
					return
				}
			}
		}
	}
}

type Projector_sys_ProjectorWorkspaceIDIdx struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_ProjectorWorkspaceIDIdx) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_ProjectorWorkspaceIDIdx) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_ProjectorWorkspaceIDIdx) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_ProjectorWorkspaceIDIdx() Projector_sys_ProjectorWorkspaceIDIdx {
	return Projector_sys_ProjectorWorkspaceIDIdx{}
}

func (r Projector_sys_ProjectorWorkspaceIDIdx) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_ProjectorWorkspaceIDIdx) Entity() string {
	return "ProjectorWorkspaceIDIdx"
}

func (p *Projector_sys_ProjectorWorkspaceIDIdx) CUDs_sys_WorkspaceID() iter.Seq[Value_CDoc_sys_WorkspaceID] {
	return func(yield func(Value_CDoc_sys_WorkspaceID) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if cudQName.FullPkgName == Package_sys.CDoc_WorkspaceID.PkgPath() && cudQName.Entity == Package_sys.CDoc_WorkspaceID.Entity() {
				if !yield(Value_CDoc_sys_WorkspaceID{tv: cudValue}) {
					return
				}
			}
		}
	}
}

type Type_sys_QueryChildWorkspaceByNameParams struct {
	Type
}

type Value_Type_sys_QueryChildWorkspaceByNameParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_QueryChildWorkspaceByNameParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_QueryChildWorkspaceByNameParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_QueryChildWorkspaceByNameParams) Get_WSName() string {
	return v.tv.AsString("WSName")
}

func (r Type_sys_QueryChildWorkspaceByNameParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_QueryChildWorkspaceByNameParams) Entity() string {
	return "QueryChildWorkspaceByNameParams"
}

type Type_sys_QueryChildWorkspaceByNameResult struct {
	Type
}

type Value_Type_sys_QueryChildWorkspaceByNameResult struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_QueryChildWorkspaceByNameResult struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_QueryChildWorkspaceByNameResult) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_QueryChildWorkspaceByNameResult) Get_WSName() string {
	return v.tv.AsString("WSName")
}

func (v Value_Type_sys_QueryChildWorkspaceByNameResult) Get_WSKind() string {
	return v.tv.AsString("WSKind")
}

func (v Value_Type_sys_QueryChildWorkspaceByNameResult) Get_WSKindInitializationData() string {
	return v.tv.AsString("WSKindInitializationData")
}

func (v Value_Type_sys_QueryChildWorkspaceByNameResult) Get_TemplateName() string {
	return v.tv.AsString("TemplateName")
}

func (v Value_Type_sys_QueryChildWorkspaceByNameResult) Get_TemplateParams() string {
	return v.tv.AsString("TemplateParams")
}

func (v Value_Type_sys_QueryChildWorkspaceByNameResult) Get_WSID() int64 {
	return v.tv.AsInt64("WSID")
}

func (v Value_Type_sys_QueryChildWorkspaceByNameResult) Get_WSError() string {
	return v.tv.AsString("WSError")
}

func (r Type_sys_QueryChildWorkspaceByNameResult) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_QueryChildWorkspaceByNameResult) Entity() string {
	return "QueryChildWorkspaceByNameResult"
}

type Query_sys_QueryChildWorkspaceByName struct {
	Type
}

func (r Query_sys_QueryChildWorkspaceByName) PkgPath() string {
	return Package_sys.Path
}

func (r Query_sys_QueryChildWorkspaceByName) Entity() string {
	return "QueryChildWorkspaceByName"
}

func (c Query_sys_QueryChildWorkspaceByName) ArgumentObject() Value_Type_sys_QueryChildWorkspaceByNameParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_QueryChildWorkspaceByNameParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Query_sys_QueryChildWorkspaceByName) ArgumentPkgPath() string {
	return Package_sys.Type_QueryChildWorkspaceByNameParams.PkgPath()

}

func (r Query_sys_QueryChildWorkspaceByName) ArgumentEntity() string {
	return Package_sys.Type_QueryChildWorkspaceByNameParams.Entity()

}

func (c Query_sys_QueryChildWorkspaceByName) Result(sys_container string, wsname string, wskind string, wskindinitializationdata string, templatename string, templateparams string, wsid int64, wserror string) {
	__result := exttinygo.NewValue(exttinygo.KeyBuilder(exttinygo.StorageResult, exttinygo.NullEntity))
	__result.PutString("sys_Container", sys_container)
	__result.PutString("WSName", wsname)
	__result.PutString("WSKind", wskind)
	__result.PutString("WSKindInitializationData", wskindinitializationdata)
	__result.PutString("TemplateName", templatename)
	__result.PutString("TemplateParams", templateparams)
	__result.PutInt64("WSID", wsid)
	__result.PutString("WSError", wserror)
}

type Type_sys_Raw struct {
	Type
}

type Value_Type_sys_Raw struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_Raw struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_Raw) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_Raw) Get_Body() string {
	return v.tv.AsString("Body")
}

func (r Type_sys_Raw) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_Raw) Entity() string {
	return "Raw"
}

type View_sys_RecordsRegistry struct {
	Type
}

type Value_View_sys_RecordsRegistry struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_View_sys_RecordsRegistry struct {
	intent exttinygo.TIntent
}

func (v Value_View_sys_RecordsRegistry) Get_WLogOffset() int64 {
	return v.tv.AsInt64("WLogOffset")
}

func (i Intent_View_sys_RecordsRegistry) Set_WLogOffset(value int64) Intent_View_sys_RecordsRegistry {
	i.intent.PutInt64("WLogOffset", value)
	return i
}

func (r View_sys_RecordsRegistry) PkgPath() string {
	return Package_sys.Path
}

func (r View_sys_RecordsRegistry) Entity() string {
	return "RecordsRegistry"
}

func (v View_sys_RecordsRegistry) Insert(idhi int64, id ID) Intent_View_sys_RecordsRegistry {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt64("IDHi", idhi)
	kb.PutInt64("ID", int64(id))
	return Intent_View_sys_RecordsRegistry{intent: exttinygo.NewValue(kb)}
}

func (v View_sys_RecordsRegistry) Keys() []string {
	return []string{"IDHi", "ID"}
}

func (v View_sys_RecordsRegistry) Update(idhi int64, id ID) Intent_View_sys_RecordsRegistry {
	existingValue := v.MustGet(idhi, id)
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt64("IDHi", idhi)
	kb.PutInt64("ID", int64(id))
	return Intent_View_sys_RecordsRegistry{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v View_sys_RecordsRegistry) Get(idhi int64, id ID) (Value_View_sys_RecordsRegistry, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt64("IDHi", idhi)
	kb.PutInt64("ID", int64(id))
	tv, exists := exttinygo.QueryValue(kb)
	if !exists {
		return Value_View_sys_RecordsRegistry{kb: kb}, false
	}
	return Value_View_sys_RecordsRegistry{tv: tv, kb: kb}, true
}

func (v View_sys_RecordsRegistry) MustGet(idhi int64, id ID) Value_View_sys_RecordsRegistry {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt64("IDHi", idhi)
	kb.PutInt64("ID", int64(id))
	tv := exttinygo.MustGetValue(kb)
	return Value_View_sys_RecordsRegistry{tv: tv, kb: kb}
}

func (v Value_View_sys_RecordsRegistry) Insert() Intent_View_sys_RecordsRegistry {
	return Intent_View_sys_RecordsRegistry{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_View_sys_RecordsRegistry) Update() Intent_View_sys_RecordsRegistry {
	return Intent_View_sys_RecordsRegistry{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}

type Projector_sys_RecordsRegistryProjector struct {
	Type
	_event exttinygo.TValue
}

func (p Projector_sys_RecordsRegistryProjector) Event() Event {
	return Event{
		WLogOffset: p.event().AsInt64("WLogOffset"),
	}
}

func (p Projector_sys_RecordsRegistryProjector) event() exttinygo.TValue {
	if p._event == 0 {
		p._event = eventFunc()
	}
	return p._event
}

func (r Projector_sys_RecordsRegistryProjector) WorkspaceDescriptor() string {
	return ""
}

func (pkg TPackage_sys) Projector_RecordsRegistryProjector() Projector_sys_RecordsRegistryProjector {
	return Projector_sys_RecordsRegistryProjector{}
}

func (p Projector_sys_RecordsRegistryProjector) CUDs_CRecord() iter.Seq[Value_sys_CRecord] {
	return func(yield func(Value_sys_CRecord) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if IsCRecord(cudQName) {
				if !yield(Value_sys_CRecord{event: p.event(), v: cudValue}) {
					return
				}
			}
		}
	}
}

func (p Projector_sys_RecordsRegistryProjector) CUDs_WRecord() iter.Seq[Value_sys_WRecord] {
	return func(yield func(Value_sys_WRecord) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if IsWRecord(cudQName) {
				if !yield(Value_sys_WRecord{event: p.event(), v: cudValue}) {
					return
				}
			}
		}
	}
}

func (p Projector_sys_RecordsRegistryProjector) ODoc() (Value_sys_ODoc, bool) {
	arg := p.event().AsValue("ArgumentObject")
	argQName := arg.AsQName("sys.QName")
	if !IsODoc(argQName) {
		return Value_sys_ODoc{}, false
	}

	return Value_sys_ODoc{
		event: p.event(),
		v:     arg,
		qName: exttinygo.QName{FullPkgName: argQName.FullPkgName, Entity: argQName.Entity},
	}, true
}

func (r Projector_sys_RecordsRegistryProjector) PkgPath() string {
	return Package_sys.Path
}

func (r Projector_sys_RecordsRegistryProjector) Entity() string {
	return "RecordsRegistryProjector"
}

func (p *Projector_sys_RecordsRegistryProjector) CUDs_sys_CRecord() iter.Seq[Value_CRecord_sys_CRecord] {
	return func(yield func(Value_CRecord_sys_CRecord) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if cudQName.FullPkgName == Package_sys.CRecord_CRecord.PkgPath() && cudQName.Entity == Package_sys.CRecord_CRecord.Entity() {
				if !yield(Value_CRecord_sys_CRecord{tv: cudValue}) {
					return
				}
			}
		}
	}
}

func (p *Projector_sys_RecordsRegistryProjector) Arg_sys_ODoc() (Value_ODoc_sys_ODoc, bool) {
	arg := p.event().AsValue("ArgumentObject")
	argQName := arg.AsQName("sys.QName")
	if argQName.FullPkgName != Package_sys.ODoc_ODoc.PkgPath() || argQName.Entity != Package_sys.ODoc_ODoc.Entity() {
		return Value_ODoc_sys_ODoc{}, false
	}

	return Value_ODoc_sys_ODoc{tv: arg}, true
}

func (p *Projector_sys_RecordsRegistryProjector) CUDs_sys_WRecord() iter.Seq[Value_WRecord_sys_WRecord] {
	return func(yield func(Value_WRecord_sys_WRecord) bool) {
		cudsValue := p.event().AsValue("CUDs")
		for i := 0; i < cudsValue.Len(); i++ {
			cudValue := cudsValue.GetAsValue(i)
			cudQName := cudValue.AsQName("sys.QName")
			if cudQName.FullPkgName == Package_sys.WRecord_WRecord.PkgPath() && cudQName.Entity == Package_sys.WRecord_WRecord.Entity() {
				if !yield(Value_WRecord_sys_WRecord{tv: cudValue}) {
					return
				}
			}
		}
	}
}

type Command_sys_RegisterTempBLOB1d struct {
	Type
}

func (r Command_sys_RegisterTempBLOB1d) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_RegisterTempBLOB1d) Entity() string {
	return "RegisterTempBLOB1d"
}

func (r Command_sys_RegisterTempBLOB1d) ArgumentPkgPath() string {
	return ""
}

func (r Command_sys_RegisterTempBLOB1d) ArgumentEntity() string {
	return ""
}

func (r Command_sys_RegisterTempBLOB1d) WorkspaceDescriptor() string {
	return ""
}

type Type_sys_RenameQNameParams struct {
	Type
}

type Value_Type_sys_RenameQNameParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_RenameQNameParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_RenameQNameParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_RenameQNameParams) Get_NewQName() string {
	return v.tv.AsString("NewQName")
}

func (r Type_sys_RenameQNameParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_RenameQNameParams) Entity() string {
	return "RenameQNameParams"
}

type Command_sys_RenameQName struct {
	Type
}

func (r Command_sys_RenameQName) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_RenameQName) Entity() string {
	return "RenameQName"
}

func (c Command_sys_RenameQName) ArgumentObject() Value_Type_sys_RenameQNameParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_RenameQNameParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Command_sys_RenameQName) ArgumentPkgPath() string {
	return Package_sys.Type_RenameQNameParams.PkgPath()

}

func (r Command_sys_RenameQName) ArgumentEntity() string {
	return Package_sys.Type_RenameQNameParams.Entity()

}

func (r Command_sys_RenameQName) WorkspaceDescriptor() string {
	return ""
}

type Type_sys_SqlQueryParams struct {
	Type
}

type Value_Type_sys_SqlQueryParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_SqlQueryParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_SqlQueryParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_SqlQueryParams) Get_Query() string {
	return v.tv.AsString("Query")
}

func (r Type_sys_SqlQueryParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_SqlQueryParams) Entity() string {
	return "SqlQueryParams"
}

type Type_sys_SqlQueryResult struct {
	Type
}

type Value_Type_sys_SqlQueryResult struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_SqlQueryResult struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_SqlQueryResult) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_SqlQueryResult) Get_Result() string {
	return v.tv.AsString("Result")
}

func (r Type_sys_SqlQueryResult) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_SqlQueryResult) Entity() string {
	return "SqlQueryResult"
}

type Query_sys_SqlQuery struct {
	Type
}

func (r Query_sys_SqlQuery) PkgPath() string {
	return Package_sys.Path
}

func (r Query_sys_SqlQuery) Entity() string {
	return "SqlQuery"
}

func (c Query_sys_SqlQuery) ArgumentObject() Value_Type_sys_SqlQueryParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_SqlQueryParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Query_sys_SqlQuery) ArgumentPkgPath() string {
	return Package_sys.Type_SqlQueryParams.PkgPath()

}

func (r Query_sys_SqlQuery) ArgumentEntity() string {
	return Package_sys.Type_SqlQueryParams.Entity()

}

func (c Query_sys_SqlQuery) Result(sys_container string, result string) {
	__result := exttinygo.NewValue(exttinygo.KeyBuilder(exttinygo.StorageResult, exttinygo.NullEntity))
	__result.PutString("sys_Container", sys_container)
	__result.PutString("Result", result)
}

type Type_sys_StateParams struct {
	Type
}

type Value_Type_sys_StateParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_StateParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_StateParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_StateParams) Get_After() int64 {
	return v.tv.AsInt64("After")
}

func (r Type_sys_StateParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_StateParams) Entity() string {
	return "StateParams"
}

type Type_sys_StateResult struct {
	Type
}

type Value_Type_sys_StateResult struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_StateResult struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_StateResult) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_StateResult) Get_State() string {
	return v.tv.AsString("State")
}

func (r Type_sys_StateResult) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_StateResult) Entity() string {
	return "StateResult"
}

type Query_sys_State struct {
	Type
}

func (r Query_sys_State) PkgPath() string {
	return Package_sys.Path
}

func (r Query_sys_State) Entity() string {
	return "State"
}

func (c Query_sys_State) ArgumentObject() Value_Type_sys_StateParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_StateParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Query_sys_State) ArgumentPkgPath() string {
	return Package_sys.Type_StateParams.PkgPath()

}

func (r Query_sys_State) ArgumentEntity() string {
	return Package_sys.Type_StateParams.Entity()

}

func (c Query_sys_State) Result(sys_container string, state string) {
	__result := exttinygo.NewValue(exttinygo.KeyBuilder(exttinygo.StorageResult, exttinygo.NullEntity))
	__result.PutString("sys_Container", sys_container)
	__result.PutString("State", state)
}

type View_sys_Uniques struct {
	Type
}

type Value_View_sys_Uniques struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_View_sys_Uniques struct {
	intent exttinygo.TIntent
}

func (v Value_View_sys_Uniques) Get_ID() ID {
	return ID(v.tv.AsInt64("ID"))
}

func (i Intent_View_sys_Uniques) Set_ID(value ID) Intent_View_sys_Uniques {
	i.intent.PutInt64("ID", int64(value))
	return i
}

func (r View_sys_Uniques) PkgPath() string {
	return Package_sys.Path
}

func (r View_sys_Uniques) Entity() string {
	return "Uniques"
}

func (v View_sys_Uniques) Insert(valueshash int64, values Bytes) Intent_View_sys_Uniques {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt64("ValuesHash", valueshash)
	kb.PutBytes("Values", values)
	return Intent_View_sys_Uniques{intent: exttinygo.NewValue(kb)}
}

func (v View_sys_Uniques) Keys() []string {
	return []string{"ValuesHash", "Values"}
}

func (v View_sys_Uniques) Update(valueshash int64, values Bytes) Intent_View_sys_Uniques {
	existingValue := v.MustGet(valueshash, values)
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt64("ValuesHash", valueshash)
	kb.PutBytes("Values", values)
	return Intent_View_sys_Uniques{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v View_sys_Uniques) Get(valueshash int64, values Bytes) (Value_View_sys_Uniques, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt64("ValuesHash", valueshash)
	kb.PutBytes("Values", values)
	tv, exists := exttinygo.QueryValue(kb)
	if !exists {
		return Value_View_sys_Uniques{kb: kb}, false
	}
	return Value_View_sys_Uniques{tv: tv, kb: kb}, true
}

func (v View_sys_Uniques) MustGet(valueshash int64, values Bytes) Value_View_sys_Uniques {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt64("ValuesHash", valueshash)
	kb.PutBytes("Values", values)
	tv := exttinygo.MustGetValue(kb)
	return Value_View_sys_Uniques{tv: tv, kb: kb}
}

func (v Value_View_sys_Uniques) Insert() Intent_View_sys_Uniques {
	return Intent_View_sys_Uniques{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_View_sys_Uniques) Update() Intent_View_sys_Uniques {
	return Intent_View_sys_Uniques{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}

type Type_sys_UpdateJoinedWorkspaceRolesParams struct {
	Type
}

type Value_Type_sys_UpdateJoinedWorkspaceRolesParams struct {
	tv exttinygo.TValue
}

type Intent_Type_sys_UpdateJoinedWorkspaceRolesParams struct {
	intent exttinygo.TIntent
}

func (v Value_Type_sys_UpdateJoinedWorkspaceRolesParams) Get_sys_Container() string {
	return v.tv.AsString("sys_Container")
}

func (v Value_Type_sys_UpdateJoinedWorkspaceRolesParams) Get_Roles() string {
	return v.tv.AsString("Roles")
}

func (v Value_Type_sys_UpdateJoinedWorkspaceRolesParams) Get_InvitingWorkspaceWSID() int64 {
	return v.tv.AsInt64("InvitingWorkspaceWSID")
}

func (r Type_sys_UpdateJoinedWorkspaceRolesParams) PkgPath() string {
	return Package_sys.Path
}

func (r Type_sys_UpdateJoinedWorkspaceRolesParams) Entity() string {
	return "UpdateJoinedWorkspaceRolesParams"
}

type Command_sys_UpdateJoinedWorkspaceRoles struct {
	Type
}

func (r Command_sys_UpdateJoinedWorkspaceRoles) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_UpdateJoinedWorkspaceRoles) Entity() string {
	return "UpdateJoinedWorkspaceRoles"
}

func (c Command_sys_UpdateJoinedWorkspaceRoles) ArgumentObject() Value_Type_sys_UpdateJoinedWorkspaceRolesParams {
	kb := exttinygo.KeyBuilder(exttinygo.StorageCommandContext, exttinygo.NullEntity)
	return Value_Type_sys_UpdateJoinedWorkspaceRolesParams{tv: exttinygo.MustGetValue(kb).AsValue(FieldNameEventArgumentObject)}
}

func (r Command_sys_UpdateJoinedWorkspaceRoles) ArgumentPkgPath() string {
	return Package_sys.Type_UpdateJoinedWorkspaceRolesParams.PkgPath()

}

func (r Command_sys_UpdateJoinedWorkspaceRoles) ArgumentEntity() string {
	return Package_sys.Type_UpdateJoinedWorkspaceRolesParams.Entity()

}

func (r Command_sys_UpdateJoinedWorkspaceRoles) WorkspaceDescriptor() string {
	return ""
}

type Command_sys_UploadBLOBHelper struct {
	Type
}

func (r Command_sys_UploadBLOBHelper) PkgPath() string {
	return Package_sys.Path
}

func (r Command_sys_UploadBLOBHelper) Entity() string {
	return "UploadBLOBHelper"
}

func (r Command_sys_UploadBLOBHelper) ArgumentPkgPath() string {
	return ""
}

func (r Command_sys_UploadBLOBHelper) ArgumentEntity() string {
	return ""
}

func (r Command_sys_UploadBLOBHelper) WorkspaceDescriptor() string {
	return ""
}

type View_sys_ViewSubjectsIdx struct {
	Type
}

type Value_View_sys_ViewSubjectsIdx struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_View_sys_ViewSubjectsIdx struct {
	intent exttinygo.TIntent
}

func (v Value_View_sys_ViewSubjectsIdx) Get_SubjectID() ID {
	return ID(v.tv.AsInt64("SubjectID"))
}

func (i Intent_View_sys_ViewSubjectsIdx) Set_SubjectID(value ID) Intent_View_sys_ViewSubjectsIdx {
	i.intent.PutInt64("SubjectID", int64(value))
	return i
}

func (r View_sys_ViewSubjectsIdx) PkgPath() string {
	return Package_sys.Path
}

func (r View_sys_ViewSubjectsIdx) Entity() string {
	return "ViewSubjectsIdx"
}

func (v View_sys_ViewSubjectsIdx) Insert(loginhash int64, login string) Intent_View_sys_ViewSubjectsIdx {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt64("LoginHash", loginhash)
	kb.PutString("Login", login)
	return Intent_View_sys_ViewSubjectsIdx{intent: exttinygo.NewValue(kb)}
}

func (v View_sys_ViewSubjectsIdx) Keys() []string {
	return []string{"LoginHash", "Login"}
}

func (v View_sys_ViewSubjectsIdx) Update(loginhash int64, login string) Intent_View_sys_ViewSubjectsIdx {
	existingValue := v.MustGet(loginhash, login)
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt64("LoginHash", loginhash)
	kb.PutString("Login", login)
	return Intent_View_sys_ViewSubjectsIdx{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v View_sys_ViewSubjectsIdx) Get(loginhash int64, login string) (Value_View_sys_ViewSubjectsIdx, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt64("LoginHash", loginhash)
	kb.PutString("Login", login)
	tv, exists := exttinygo.QueryValue(kb)
	if !exists {
		return Value_View_sys_ViewSubjectsIdx{kb: kb}, false
	}
	return Value_View_sys_ViewSubjectsIdx{tv: tv, kb: kb}, true
}

func (v View_sys_ViewSubjectsIdx) MustGet(loginhash int64, login string) Value_View_sys_ViewSubjectsIdx {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt64("LoginHash", loginhash)
	kb.PutString("Login", login)
	tv := exttinygo.MustGetValue(kb)
	return Value_View_sys_ViewSubjectsIdx{tv: tv, kb: kb}
}

func (v Value_View_sys_ViewSubjectsIdx) Insert() Intent_View_sys_ViewSubjectsIdx {
	return Intent_View_sys_ViewSubjectsIdx{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_View_sys_ViewSubjectsIdx) Update() Intent_View_sys_ViewSubjectsIdx {
	return Intent_View_sys_ViewSubjectsIdx{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}

type View_sys_WLogDates struct {
	Type
}

type Value_View_sys_WLogDates struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_View_sys_WLogDates struct {
	intent exttinygo.TIntent
}

func (v Value_View_sys_WLogDates) Get_FirstOffset() int64 {
	return v.tv.AsInt64("FirstOffset")
}

func (v Value_View_sys_WLogDates) Get_LastOffset() int64 {
	return v.tv.AsInt64("LastOffset")
}

func (i Intent_View_sys_WLogDates) Set_FirstOffset(value int64) Intent_View_sys_WLogDates {
	i.intent.PutInt64("FirstOffset", value)
	return i
}

func (i Intent_View_sys_WLogDates) Set_LastOffset(value int64) Intent_View_sys_WLogDates {
	i.intent.PutInt64("LastOffset", value)
	return i
}

func (r View_sys_WLogDates) PkgPath() string {
	return Package_sys.Path
}

func (r View_sys_WLogDates) Entity() string {
	return "WLogDates"
}

func (v View_sys_WLogDates) Insert(year int32, dayofyear int32) Intent_View_sys_WLogDates {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("Year", year)
	kb.PutInt32("DayOfYear", dayofyear)
	return Intent_View_sys_WLogDates{intent: exttinygo.NewValue(kb)}
}

func (v View_sys_WLogDates) Keys() []string {
	return []string{"Year", "DayOfYear"}
}

func (v View_sys_WLogDates) Update(year int32, dayofyear int32) Intent_View_sys_WLogDates {
	existingValue := v.MustGet(year, dayofyear)
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("Year", year)
	kb.PutInt32("DayOfYear", dayofyear)
	return Intent_View_sys_WLogDates{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v View_sys_WLogDates) Get(year int32, dayofyear int32) (Value_View_sys_WLogDates, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("Year", year)
	kb.PutInt32("DayOfYear", dayofyear)
	tv, exists := exttinygo.QueryValue(kb)
	if !exists {
		return Value_View_sys_WLogDates{kb: kb}, false
	}
	return Value_View_sys_WLogDates{tv: tv, kb: kb}, true
}

func (v View_sys_WLogDates) MustGet(year int32, dayofyear int32) Value_View_sys_WLogDates {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("Year", year)
	kb.PutInt32("DayOfYear", dayofyear)
	tv := exttinygo.MustGetValue(kb)
	return Value_View_sys_WLogDates{tv: tv, kb: kb}
}

func (v Value_View_sys_WLogDates) Insert() Intent_View_sys_WLogDates {
	return Intent_View_sys_WLogDates{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_View_sys_WLogDates) Update() Intent_View_sys_WLogDates {
	return Intent_View_sys_WLogDates{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}

type View_sys_WorkspaceIDIdx struct {
	Type
}

type Value_View_sys_WorkspaceIDIdx struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_View_sys_WorkspaceIDIdx struct {
	intent exttinygo.TIntent
}

func (v Value_View_sys_WorkspaceIDIdx) Get_WSID() int64 {
	return v.tv.AsInt64("WSID")
}

func (v Value_View_sys_WorkspaceIDIdx) Get_IDOfCDocWorkspaceID() ID {
	return ID(v.tv.AsInt64("IDOfCDocWorkspaceID"))
}

func (i Intent_View_sys_WorkspaceIDIdx) Set_WSID(value int64) Intent_View_sys_WorkspaceIDIdx {
	i.intent.PutInt64("WSID", value)
	return i
}

func (i Intent_View_sys_WorkspaceIDIdx) Set_IDOfCDocWorkspaceID(value ID) Intent_View_sys_WorkspaceIDIdx {
	i.intent.PutInt64("IDOfCDocWorkspaceID", int64(value))
	return i
}

func (r View_sys_WorkspaceIDIdx) PkgPath() string {
	return Package_sys.Path
}

func (r View_sys_WorkspaceIDIdx) Entity() string {
	return "WorkspaceIDIdx"
}

func (v View_sys_WorkspaceIDIdx) Insert(ownerwsid int64, wsname string) Intent_View_sys_WorkspaceIDIdx {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt64("OwnerWSID", ownerwsid)
	kb.PutString("WSName", wsname)
	return Intent_View_sys_WorkspaceIDIdx{intent: exttinygo.NewValue(kb)}
}

func (v View_sys_WorkspaceIDIdx) Keys() []string {
	return []string{"OwnerWSID", "WSName"}
}

func (v View_sys_WorkspaceIDIdx) Update(ownerwsid int64, wsname string) Intent_View_sys_WorkspaceIDIdx {
	existingValue := v.MustGet(ownerwsid, wsname)
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt64("OwnerWSID", ownerwsid)
	kb.PutString("WSName", wsname)
	return Intent_View_sys_WorkspaceIDIdx{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v View_sys_WorkspaceIDIdx) Get(ownerwsid int64, wsname string) (Value_View_sys_WorkspaceIDIdx, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt64("OwnerWSID", ownerwsid)
	kb.PutString("WSName", wsname)
	tv, exists := exttinygo.QueryValue(kb)
	if !exists {
		return Value_View_sys_WorkspaceIDIdx{kb: kb}, false
	}
	return Value_View_sys_WorkspaceIDIdx{tv: tv, kb: kb}, true
}

func (v View_sys_WorkspaceIDIdx) MustGet(ownerwsid int64, wsname string) Value_View_sys_WorkspaceIDIdx {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt64("OwnerWSID", ownerwsid)
	kb.PutString("WSName", wsname)
	tv := exttinygo.MustGetValue(kb)
	return Value_View_sys_WorkspaceIDIdx{tv: tv, kb: kb}
}

func (v Value_View_sys_WorkspaceIDIdx) Insert() Intent_View_sys_WorkspaceIDIdx {
	return Intent_View_sys_WorkspaceIDIdx{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_View_sys_WorkspaceIDIdx) Update() Intent_View_sys_WorkspaceIDIdx {
	return Intent_View_sys_WorkspaceIDIdx{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}

type View_sys_projectionOffsets struct {
	Type
}

type Value_View_sys_projectionOffsets struct {
	tv exttinygo.TValue
	kb exttinygo.TKeyBuilder
}

type Intent_View_sys_projectionOffsets struct {
	intent exttinygo.TIntent
}

func (v Value_View_sys_projectionOffsets) Get_offset() int64 {
	return v.tv.AsInt64("offset")
}

func (i Intent_View_sys_projectionOffsets) Set_offset(value int64) Intent_View_sys_projectionOffsets {
	i.intent.PutInt64("offset", value)
	return i
}

func (r View_sys_projectionOffsets) PkgPath() string {
	return Package_sys.Path
}

func (r View_sys_projectionOffsets) Entity() string {
	return "projectionOffsets"
}

func (v View_sys_projectionOffsets) Insert(partition int32) Intent_View_sys_projectionOffsets {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("partition", partition)
	return Intent_View_sys_projectionOffsets{intent: exttinygo.NewValue(kb)}
}

func (v View_sys_projectionOffsets) Keys() []string {
	return []string{"partition"}
}

func (v View_sys_projectionOffsets) Update(partition int32) Intent_View_sys_projectionOffsets {
	existingValue := v.MustGet(partition)
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("partition", partition)
	return Intent_View_sys_projectionOffsets{intent: exttinygo.UpdateValue(kb, existingValue.tv)}
}

func (v View_sys_projectionOffsets) Get(partition int32) (Value_View_sys_projectionOffsets, bool) {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("partition", partition)
	tv, exists := exttinygo.QueryValue(kb)
	if !exists {
		return Value_View_sys_projectionOffsets{kb: kb}, false
	}
	return Value_View_sys_projectionOffsets{tv: tv, kb: kb}, true
}

func (v View_sys_projectionOffsets) MustGet(partition int32) Value_View_sys_projectionOffsets {
	kb := exttinygo.KeyBuilder(exttinygo.StorageView, v.fQName)
	kb.PutInt32("partition", partition)
	tv := exttinygo.MustGetValue(kb)
	return Value_View_sys_projectionOffsets{tv: tv, kb: kb}
}

func (v Value_View_sys_projectionOffsets) Insert() Intent_View_sys_projectionOffsets {
	return Intent_View_sys_projectionOffsets{intent: exttinygo.NewValue(v.kb)}
}

func (v Value_View_sys_projectionOffsets) Update() Intent_View_sys_projectionOffsets {
	return Intent_View_sys_projectionOffsets{intent: exttinygo.UpdateValue(v.kb, v.tv)}
}
