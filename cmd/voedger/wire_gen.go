// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/voedger/voedger/pkg/apps"
	"github.com/voedger/voedger/pkg/ihttp"
	"github.com/voedger/voedger/pkg/ihttpctl"
	"github.com/voedger/voedger/pkg/ihttpimpl"
)

import (
	_ "embed"
)

// Injectors from wire.go:

func wireServer(cliParams ihttp.CLIParams, ihttpGrafanaPort ihttp.GrafanaPort, ihttpPrometheusPort ihttp.PrometheusPort) (WiredServer, func(), error) {
	ihttpProcessor, cleanup, err := ihttpimpl.NewProcessor(cliParams)
	if err != nil {
		return WiredServer{}, nil, err
	}
	ihttpProcessorAPI, err := ihttpimpl.NewAPI(ihttpProcessor)
	if err != nil {
		cleanup()
		return WiredServer{}, nil, err
	}
	v := apps.NewStaticEmbeddedResources()
	redirectRoutes := apps.NewRedirectionRoutes(ihttpGrafanaPort, ihttpPrometheusPort)
	defaultRedirectRoute := apps.NewDefaultRedirectionRoute()
	ihttpProcessorController, err := ihttpctl.NewHTTPProcessorController(ihttpProcessorAPI, v, redirectRoutes, defaultRedirectRoute)
	if err != nil {
		cleanup()
		return WiredServer{}, nil, err
	}
	wiredServer := WiredServer{
		IHTTPProcessor:           ihttpProcessor,
		IHTTPProcessorAPI:        ihttpProcessorAPI,
		IHTTPProcessorController: ihttpProcessorController,
	}
	return wiredServer, func() {
		cleanup()
	}, nil
}
