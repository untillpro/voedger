// Code generated by "stringer -type=DataKind -output=data-kind_string.go"; DO NOT EDIT.

package appdef

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DataKind_null-0]
	_ = x[DataKind_int32-1]
	_ = x[DataKind_int64-2]
	_ = x[DataKind_float32-3]
	_ = x[DataKind_float64-4]
	_ = x[DataKind_bytes-5]
	_ = x[DataKind_string-6]
	_ = x[DataKind_raw-7]
	_ = x[DataKind_QName-8]
	_ = x[DataKind_bool-9]
	_ = x[DataKind_RecordID-10]
	_ = x[DataKind_Record-11]
	_ = x[DataKind_Event-12]
	_ = x[DataKind_FakeLast-13]
}

const _DataKind_name = "DataKind_nullDataKind_int32DataKind_int64DataKind_float32DataKind_float64DataKind_bytesDataKind_stringDataKind_rawDataKind_QNameDataKind_boolDataKind_RecordIDDataKind_RecordDataKind_EventDataKind_FakeLast"

var _DataKind_index = [...]uint8{0, 13, 27, 41, 57, 73, 87, 102, 114, 128, 141, 158, 173, 187, 204}

func (i DataKind) String() string {
	if i >= DataKind(len(_DataKind_index)-1) {
		return "DataKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DataKind_name[_DataKind_index[i]:_DataKind_index[i+1]]
}
