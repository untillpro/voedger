/*
 * Copyright (c) 2023-present unTill Software Development Group B.V.
 * @author Michael Saigachenko
 */

WORKSPACE FiscalContainerWS (
    DESCRIPTOR FiscalContainer(
        FiscalServiceHost varchar(100),
        FiscalServicePort int32,
        Status int32 -- 0: Ready, 1: Shutting down, 2: Shut down, 3: Starting up,
    );

    TYPE CustomerOnboardedParam (
        ClientID varchar(50) NOT NULL, -- onboarded Terminal Client ID
        ApiKey varchar(50) NOT NULL,
        ApiSecret varchar(50) NOT NULL,
        FiscalCountry int32, --Retailforce-specific  
        EnvironmentKey varchar(50) NOT NULL,
        Product int32 NOT NULL
    );

    TABLE OnboardedCustomer INHERITS CDoc(
        ApiKey varchar(50) NOT NULL,
        ApiSecret varchar(50) NOT NULL, -- for auth
        Product int32 NOT NULL,
        FiscalCountry int32, --Retailforce-specific  
        EnvironmentKey varchar(50) NOT NULL,
        ClientID varchar(50) NOT NULL, -- onboarded Terminal Client ID
        LastWLogOffset int64 NOT NULL, --> cmd.CustomerOnboarded
        UNIQUE(ApiKey)
    );

    TYPE FiscalizeDocumentParam(
        ApiKey varchar(50) NOT NULL,
        ApiSecret varchar(50) NOT NULL, 
        DocumentUID varchar(50) NOT NULL,
        Document varchar(65535) NOT NULL
    );

    TABLE FiscalizationResult INHERITS WDoc(
        OnboardedCustomerID int64, -- TODO: ref(OnboardedCustomer)
        DocumentUID varchar(50),
        CmdOffs int64,
        Error varchar,
        FiscalizationResult varchar(65535),
        Status int32, -- 0: in progress, 1: stored, 2: cancelled due to error, 3: unable to cancel due to error
        UNIQUE(OnboardedCustomerID, DocumentUID)
    );

    VIEW FiscalizationResultStatusOverview(
        Product int32,
        OnboardedCustomerID ref(OnboardedCustomer),
        Stored int32,
        Cancelled int32,
        Invalid int32,
        UnableToCancel int32,
        PRIMARY KEY((Product), OnboardedCustomerID)
    ) AS RESULT OF UpdateFiscalizationResultStatusOverview;
    
    TYPE FiscalizationResultStatusParam(
        ApiKey varchar(50) NOT NULL,
        ApiSecret varchar(50) NOT NULL,  
        DocumentUID varchar(50) NOT NULL
    );

    TYPE FiscalizationResultStatusResult(
        Status int32,
        Error varchar,
        FiscalizationResult varchar(65535)
    );

    TYPE TerminalStatusParam(
        ApiKey varchar(50) NOT NULL,
        ApiSecret varchar(50) NOT NULL
    );

    TYPE TerminalStatusResult(
        Connected boolean,
        ConnectionError varchar
    );

    TABLE Export INHERITS WDoc(
        OnboardedCustomerID int64 NOT NULL, -- TODO: ref(OnboardedCustomer)
        ExportUID varchar(50) NOT NULL,
        ExportKind int32,
        From timestamp NOT NULL,
        Till timestamp NOT NULL,
        Error varchar,
        DownloadLinkUrl varchar(1024),        
        LinkValidTill timestamp,
        Status int32, -- 0: in progress, 1: ready, 2: error
        UNIQUE(OnboardedCustomerID, ExportUID)
    );

    TYPE CreateExportParam(
        ApiKey varchar(50) NOT NULL,
        ApiSecret varchar(50) NOT NULL,
        ExportUID varchar(50) NOT NULL,
        ExportKind int32,
        From timestamp NOT NULL,
        Till timestamp NOT NULL
    );

    TYPE ExportStatusParam(
        ApiKey varchar(50) NOT NULL,
        ApiSecret varchar(50) NOT NULL,
        ExportUID varchar(50) NOT NULL
    );

    TYPE ExportStatusResult(
        Status int32,
        Error varchar,
        ResultURL varchar(1024)
    );

    VIEW ExportStatusOverview(
        Product int32,
        OnboardedCustomerID ref(OnboardedCustomer),
        Ready int32,
        Error int32,
        PRIMARY KEY((Product), OnboardedCustomerID)
    ) AS RESULT OF UpdateExportStatusOverview;

    EXTENSION ENGINE WASM (
        -- Executed from the projector
        COMMAND CustomerOnboarded(CustomerOnboardedParam);

        /*
            200 - OK
            403 - invalid credentials
            404 - customer not found
            409 - document already submitted
        */
        COMMAND FiscalizeDocument(FiscalizeDocumentParam);

        PROJECTOR ApplyFiscalizedDocument AFTER EXECUTE ON (FiscalizeDocument) STATE(FederationCommand, Http);
        PROJECTOR UpdateFiscalizationResultStatusOverview AFTER UPDATE ON (FiscalizationResult) INTENTS(View(FiscalizationResultStatusOverview));
        PROJECTOR UpdateExportStatusOverview AFTER UPDATE ON (Export) INTENTS(View(ExportStatusOverview));

        /*
            200 - FiscalDocmentStatusResult
            403 - invalid credentials
            404 - customer not found
            404 - document not found
            404 - document not found
        */
        QUERY FiscalizationResultStatus(FiscalizationResultStatusParam) RETURNS FiscalizationResultStatusResult;
        
        /*
            200 - TerminalStatusParams
            404 - Terminal is not configured
        */
        QUERY TerminalStatus(TerminalStatusParam) RETURNS TerminalStatusResult;    

        /*
            200 - OK
            403 - invalid credentials
            404 - customer not found
            409 - export already crated
        */
        COMMAND CreateExport(CreateExportParam);
        PROJECTOR HandleExport AFTER EXECUTE ON (CreateExport) STATE(FederationCommand, Http);

        /*
            200 - ExportStatusResult
            403 - invalid credentials
            404 - customer not found
            404 - export not found
            404 - document not found
        */
        QUERY ExportStatus(ExportStatusParam) RETURNS ExportStatusResult;

    );
    GRANT INSERT ON COMMAND FiscalizeDocument TO Anyone;
    GRANT SELECT ON QUERY FiscalizationResultStatus TO Anyone;
    GRANT SELECT ON QUERY TerminalStatus TO Anyone;
    GRANT INSERT ON COMMAND CreateExport TO Anyone;
    GRANT SELECT ON QUERY ExportStatus TO Anyone;
    
)